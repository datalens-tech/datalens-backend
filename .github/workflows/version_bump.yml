name: versioner

on:
  workflow_dispatch:
    inputs:
      app_path:
        type: choice
        required: true
        description:
        options:
          - mainrepo/lib/bi_api_lib;app/bi_api;app/bi_rqe_ext_async;app/bi_rqe_ext_sync;app/bi_rqe_int_sync;app_yc/app_yc_control_api;app_yc/app_yc_data_api;app_yc/app_yc_data_api_sec_embeds;app_yc/app_yc_public_dataset_api;app_os/app_os_control_api;app_os/app_os_data_api
          - app/bi_external_api;
          - app/bi_file_secure_reader;
          - mainrepo/lib/bi_file_uploader_api_lib;app/bi_file_uploader;app_yc/app_yc_file_uploader_api
          - mainrepo/lib/bi_file_uploader_worker_lib;app/bi_file_uploader_worker;app_yc/app_yc_file_uploader_worker
          - app/bi_alerts;
          - ops/bi_integration_tests;

jobs:
  release_version:
    runs-on: [ self-hosted, linux ]
    container:
      image: "${{ vars.DL_CI_CR_URI }}/gh-action-image-default:7"
      credentials:
        username: "${{ secrets.DL_CI_CR_USER }}"
        password: "${{ secrets.DL_CI_CR_TOKEN }}"
    permissions:
      contents: write
      pull-requests: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: 'Cleanup build folder'
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./
      - run: git config --global --add safe.directory .
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git config --global --add safe.directory .
      - run: git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}
      - name: set commiter info
        env:
          CI_COMMIT_AUTHOR: Continuous Integration
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "username@users.noreply.github.com"
      - name: run releaser
        run: |
          export PROJ_ROOT=$(realpath .)
          export ROOT_PKG_PATH=$(echo "${{ github.event.inputs.app_path }}" | cut -d ';' -f1)
          export SUB_PKG_PATHS_LIST_STR=$(echo "${{ github.event.inputs.app_path }}" | cut -d ';' -f2-)
          #
          NEW_BRANCH_NAME="release-pr/$(date +"%Y-%m-%dT%H-%M-%S")"
          git checkout -b "${NEW_BRANCH_NAME}"
          #
          # Bump
          #
          bash ${PROJ_ROOT}/.github/bump_version.bash
          #
          # Debug
          #
          git diff HEAD~1
          git push --set-upstream origin "${NEW_BRANCH_NAME}"
          #
          # PR
          #
          PR_URL=$(gh pr create -B trunk --fill --base "${GITHUB_REF_NAME}" --body "Releasing version for ${{ github.event.inputs.app_path }}")
          echo "${PR_URL}"
          echo "${PR_URL}" > pr_url.txt
      - name: approve
        env:
          GH_TOKEN: "${{ secrets.APPROVE_PR_TOKEN }}"
        run: gh pr review -a "$(cat pr_url.txt)"
      - name: merge
        run: gh pr merge -s "$(cat pr_url.txt)"
