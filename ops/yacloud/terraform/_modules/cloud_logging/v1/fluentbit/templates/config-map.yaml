apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: {{ .Release.Namespace | quote }}
  labels:
    k8s-app: fluent-bit
data:
  # Configuration files: server, input, filters and output
  # ======================================================
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    @INCLUDE input-kubernetes.conf
    @INCLUDE filter-kubernetes.conf
    @INCLUDE output-yc.conf

  input-kubernetes.conf: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/*.log
        Parser            docker
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     5MB
        Skip_Long_Lines   On
        Refresh_Interval  10

  filter-kubernetes.conf: |
    [FILTER]
        Name parser
        Match kube.*
        Key_Name log
        Parser cri
        Parser docker

    # then try to apply custom parsers
    [FILTER]
        Name parser
        Match kube.*
        Parser json
        Parser unified_agent
        Parser pongerd
        Key_Name log

    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude Off

    [FILTER]
        Name          rewrite_tag
        Match         kube.*
        Rule          $kubernetes['annotations']['yc.logging.tag'] ^(.+)$  yc.logging.$kubernetes['annotations']['yc.logging.tag'] false
        Emitter_Name  re_emitted

  output-yc.conf: |
    [OUTPUT]
        Name            yc-logging
        Match           *
        group_id        {{ .Values.loggingGroupId }}
        resource_type   {kubernetes/namespace_name}
        resource_id     {kubernetes/pod_name}
        stream_name     {kubernetes/host}
        message_key     message
        level_key       levelname
        default_level   DEBUG
        authorization   iam-key-file:/etc/secret/key.json
        endpoint        {{ .Values.cloudApiEndpoint }}

  parsers.conf: |

    [PARSER]
        Name cri
        Format regex
        Regex ^(?<time>[^ ]+) (?<stream>stdout|stderr) ([^ ]*) (?<log>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z

    [PARSER]
        Name        docker
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On

    [PARSER]
        Name   unified_agent
        Format regex
        Regex  ^(?<time>[^ ]+) (?<pid>\d+) (?<thread_id>\d+) (?<level>RESOURCES|DEBUG|INFO|NOTICE|WARNING|ERROR|CRITICAL_INFO|ALERT|EMERG) (?<log>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z

    [PARSER]
        Name   pongerd
        Format regex
        Regex  ^pongerd\[(?<pid>\d+)\]: \[(?<time>[^ ]+)\] (?<log>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z

    [PARSER]
        Name   json
        Format json
