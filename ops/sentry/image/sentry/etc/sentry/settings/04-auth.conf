import os
import ldap
import logging
from django_auth_ldap.config import LDAPSearch, PosixGroupType, LDAPGroupQuery

if os.getenv('SENTRY_YAUTH'):
    from django_yauth.settings import *

    AUTHENTICATION_BACKENDS = AUTHENTICATION_BACKENDS[-1:]

    INSTALLED_APPS = list(INSTALLED_APPS)
    MIDDLEWARE_CLASSES = list(MIDDLEWARE_CLASSES)

    if 'django_yauth' not in INSTALLED_APPS:
        INSTALLED_APPS.append('django_yauth')

    # YAUTH_USE_OAUTH = True
    YAUTH_USE_SITES = False
    YAUTH_USE_NATIVE_USER = True

    YAUTH_TYPE = 'intranet'  # still need accompanying YENV_... env-vars.
    YAUTH_CREATE_USER_ON_ACCESS = True

    # TODO?:
    YAUTH_CREATION_REDIRECT = False
    VIEWS_AUTH_OVERRIDES = ['sentry-api-store']

    # TODO:
    # YAUTH_TVM2_CLIENT_ID = os.environ.get('YAUTH_TVM2_CLIENT_ID')
    # YAUTH_TVM2_SECRET = os.environ.get('YAUTH_TVM2_SECRET')
    # YAUTH_USE_TVM2_FOR_BLACKBOX = True

    if 'django_yauth.middleware.YandexAuthMiddleware' not in MIDDLEWARE_CLASSES:
        MIDDLEWARE_CLASSES.append('django_yauth.middleware.YandexAuthMiddleware')
        try:
            MIDDLEWARE_CLASSES.remove('sentry.middleware.social_auth.SentrySocialAuthExceptionMiddleware')
        except (IndexError, ValueError):
            pass
elif os.getenv('AUTH_LDAP_REQUIRE_GROUP_CN'):
    AUTH_LDAP_SERVER_URI = 'ldaps://ldap-dev.yandex.net/'

    AUTH_LDAP_USER_SEARCH = LDAPSearch(
        'ou=people,dc=yandex,dc=net',
        ldap.SCOPE_SUBTREE,
        '(uid=%(user)s)',
    )

    AUTH_LDAP_GROUP_SEARCH = LDAPSearch(
        "ou=groups,dc=yandex,dc=net",
        ldap.SCOPE_SUBTREE,
        "(objectClass=posixGroup)"
    )
    AUTH_LDAP_GROUP_TYPE = PosixGroupType()
    AUTH_LDAP_FIND_GROUP_PERMS = False
    AUTH_LDAP_CACHE_GROUPS = True
    AUTH_LDAP_GROUP_CACHE_TIMEOUT = 3600

    AUTH_LDAP_REQUIRE_GROUP= [ "cn={LDAP_GROUP_NAME},ou=groups,dc=yandex,dc=net".format(LDAP_GROUP_NAME=LDAP_GROUP) for LDAP_GROUP in os.getenv('AUTH_LDAP_REQUIRE_GROUP_CN').split(",") ]

    if len(AUTH_LDAP_REQUIRE_GROUP) > 1:
        AUTH_LDAP_REQUIRE_GROUP = map((lambda LDAP_GROUP: LDAPGroupQuery(LDAP_GROUP)), AUTH_LDAP_REQUIRE_GROUP)

        AUTH_LDAP_REQUIRE_GROUP= (
                reduce((lambda LDAP_GROUP_A, LDAP_GROUP_B: LDAP_GROUP_A | LDAP_GROUP_B), AUTH_LDAP_REQUIRE_GROUP)
            )
    else:
        AUTH_LDAP_REQUIRE_GROUP = AUTH_LDAP_REQUIRE_GROUP[0]

    AUTH_LDAP_DENY_GROUP = None

    AUTH_LDAP_USER_ATTR_MAP = {
        'name': 'cn',
        'email': 'mail'
    }

    SENTRY_MANAGED_USER_FIELDS = ('first_name', 'last_name', 'password',)
    AUTH_LDAP_DEFAULT_SENTRY_ORGANIZATION = 'Sentry'
    AUTH_LDAP_SENTRY_ORGANIZATION_ROLE_TYPE = os.getenv('AUTH_LDAP_SENTRY_ORGANIZATION_ROLE_TYPE', 'member')
    AUTH_LDAP_SENTRY_ORGANIZATION_GLOBAL_ACCESS = True
    AUTH_LDAP_SENTRY_SUBSCRIBE_BY_DEFAULT = False

    AUTHENTICATION_BACKENDS = AUTHENTICATION_BACKENDS + (
        'sentry_ldap_auth.backend.SentryLdapBackend',
    )
else:
    AUTH_LDAP_SERVER_URI = 'ldaps://addc.yandex-team.ru/'
    AUTH_LDAP_USER_DN_TEMPLATE = '%(user)s@ld.yandex.ru'
    AUTH_LDAP_BIND_AS_AUTHENTICATING_USER = True
    AUTH_LDAP_AUTHORIZE_ALL_USERS = True
    AUTH_LDAP_DEFAULT_EMAIL_DOMAIN = 'yandex-team.ru'

    AUTH_LDAP_USER_SEARCH = LDAPSearch(
        'dc=ld,dc=yandex,dc=ru',
        ldap.SCOPE_SUBTREE,
        '(sAMAccountName=%(user)s)',
    )

    AUTH_LDAP_GROUP_SEARCH = None
    AUTH_LDAP_GROUP_TYPE = None
    AUTH_LDAP_REQUIRE_GROUP = None
    AUTH_LDAP_DENY_GROUP = None

    AUTH_LDAP_USER_ATTR_MAP = {
        'name': 'cn',
        'email': 'mail'
    }

    AUTH_LDAP_FIND_GROUP_PERMS = False
    AUTH_LDAP_CACHE_GROUPS = True
    AUTH_LDAP_GROUP_CACHE_TIMEOUT = 3600

    SENTRY_MANAGED_USER_FIELDS = ('email', 'first_name', 'last_name', 'password',)
    AUTH_LDAP_DEFAULT_SENTRY_ORGANIZATION = 'Sentry'
    AUTH_LDAP_SENTRY_ORGANIZATION_ROLE_TYPE = 'admin'
    AUTH_LDAP_SENTRY_ORGANIZATION_GLOBAL_ACCESS = True
    AUTH_LDAP_SENTRY_SUBSCRIBE_BY_DEFAULT = False

    AUTHENTICATION_BACKENDS = AUTHENTICATION_BACKENDS + (
        'sentry_ldap_auth.backend.SentryLdapBackend',
    )
