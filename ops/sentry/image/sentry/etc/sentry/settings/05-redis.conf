import os
import logging

redis_cluster_peers = None

if os.getenv('SENTRY_REDIS_CLUSTER_PEERS'):
    redis_cluster_peers = os.getenv('SENTRY_REDIS_CLUSTER_PEERS')

if os.getenv('QLOUD_OAUTH_TOKEN') and os.getenv('QLOUD_INSTALLATION') and not redis_cluster_peers:
    import requests

    r = requests.get(
        'https://%s.yandex-team.ru/api/v1/status/%s.%s.%s.redis' % (
            'qloud' if os.getenv('QLOUD_INSTALLATION') == 'production' else 'qloud-ext',
            os.getenv('QLOUD_PROJECT'),
            os.getenv('QLOUD_APPLICATION'),
            os.getenv('QLOUD_ENVIRONMENT'),
        ),
        headers={'Authorization': 'OAuth %s' % os.getenv('QLOUD_OAUTH_TOKEN')},
        verify=False,
    )
    if r.status_code == requests.codes.ok:
        hosts = [i['instanceFqdn'] for i in r.json() if i['instanceTargetState'] == 'ACTIVE']
        if hosts:
            redis_cluster_peers = (','.join(hosts))
        else:
            logging.error('qloud-api response instanceFqdn empty:%s' % r.json())
    else:
        logging.error('qloud-api response not OK:%s' % r.content)

redis = os.getenv('SENTRY_REDIS_HOST') or (os.getenv('REDIS_PORT_6379_TCP_ADDR') and 'redis')
if not redis:
    redis = redis_cluster_peers.split(',')[0] if redis_cluster_peers else None
    if not redis_cluster_peers:
        raise Exception(
            'Error: REDIS_PORT_6379_TCP_ADDR (or SENTRY_REDIS_HOST and SENTRY_REDIS_CLUSTER_PEERS) is undefined, did you forget to `--link` a redis container?')

redis_password = os.getenv('SENTRY_REDIS_PASSWORD') or ''
redis_port = os.getenv('SENTRY_REDIS_PORT') or '6379'
redis_db = os.getenv('SENTRY_REDIS_DB') or '0'

if redis_cluster_peers:
    redis_hosts = {}
    for i, redis in enumerate(redis_cluster_peers.split(',')):
        redis_hosts[i] = {
            'host': redis,
            'password': redis_password,
            'port': redis_port,
            'db': redis_db,
        }

    SENTRY_OPTIONS.update({
        'redis.clusters': {
            'default': {
                'hosts': redis_hosts,
            },
        },
    })
else:
    SENTRY_OPTIONS.update({
        'redis.clusters': {
            'default': {
                'hosts': {
                    0: {
                        'host': redis,
                        'password': redis_password,
                        'port': redis_port,
                        'db': redis_db,
                    },
                },
            },
        },
    })

if os.getenv('BROKER_URL'):
    BROKER_URL = os.getenv('BROKER_URL').split(';')
else:
    BROKER_URL = 'redis://:' + redis_password + '@' + redis + ':' + redis_port + '/' + redis_db
