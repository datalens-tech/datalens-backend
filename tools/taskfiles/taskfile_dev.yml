version: '3'

tasks:
  init:
    desc: Initialize project
    cmds:
      - echo "Ensuring python virtual environment is created"
      - poetry install --directory={{.PYPROJECT_TOML_PATH}} --sync --no-root
    requires:
      vars:
        - PYPROJECT_TOML_PATH

  clean:
    desc: Clean project
    cmds:
      - echo "Cleaning python virtual environment"
      - rm -rf {{.VENV_PATH}}
    requires:
      vars:
        - VENV_PATH

  venv_run:
    desc: Run poetry command
    dir: "{{.USER_WORKING_DIR}}"
    cmds:
      - "{{.VENV_PATH}}/bin/python -m {{.CLI_ARGS}}"
    requires:
      vars:
        - VENV_PATH

  test:
    desc: Run tests
    cmds:
      - task: venv_run
        vars:
          CLI_ARGS: "pytest {{.TESTS_PATH}} {{.CLI_ARGS}}"
    vars:
      TESTS_PATH: '{{.TESTS_PATH | default "."}}'

  compose_start:
    desc: Start docker-compose
    dir: "{{.USER_WORKING_DIR}}"
    cmds:
      - docker-compose -f {{.DOCKER_COMPOSE_FILE}} up {{if .DETACH}}-d{{end}}
    vars:
      DETACH: '{{.DETACH | default true }}'
      DOCKER_COMPOSE_FILE: '{{.DOCKER_COMPOSE_FILE | default "docker-compose.yml"}}'

  compose_stop:
    desc: Stop docker-compose
    dir: "{{.USER_WORKING_DIR}}"
    cmds:
      - docker-compose -f {{.DOCKER_COMPOSE_FILE}} down
    vars:
      DOCKER_COMPOSE_FILE: '{{.DOCKER_COMPOSE_FILE | default "docker-compose.yml"}}'
