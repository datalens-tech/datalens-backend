#syntax=docker/dockerfile:1.4
FROM bake_ctx_base_img

ENV APP_DIR="app/bi_api"

# ### py ###
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PIP_NO_CACHE_DIR=1
#RUN pip3 install -i https://pypi.yandex-team.ru/simple -U py-spy==0.3.14 \
#    && if [ -e /root/.cache ]; then rm -rf /root/.cache; fi

COPY docker/postgresql_in_build.sh /tmp
RUN /tmp/postgresql_in_build.sh
# # aiopg:
# ENV BI_COMPENG_PG_URL=postgresql://postgres@:5432/postgres
# # asyncpg:
ENV BI_COMPENG_PG_URL=postgresql://postgres@%2Fvar%2Frun%2Fpostgresql/postgres

ENV GUNICORN_LISTEN_PORT 80
ENV GUNICORN_LOG_CONFIG /code/gunicorn_logging.ini
ENV GUNICORN_CONFIG /code/gunicorn_config.py

COPY docker/gunicorn_logging.ini ${GUNICORN_LOG_CONFIG}
COPY docker/gunicorn_config.py ${GUNICORN_CONFIG}

COPY etc /etc

# REMINDER: Logrotate fixes: if any logrotate configs change is done in here,
# apply the commands from the base mess.

COPY uwsgi /code/app/uwsgi

# Libs & metapkg
COPY --from=bake_ctx_src_lib / /src

# Sources copy
RUN mkdir -p /src/$APP_DIR
COPY /pyproject.toml /src/$APP_DIR/pyproject.toml
COPY /bi /src/$APP_DIR/bi
COPY /README.md /src/$APP_DIR/README.md

WORKDIR /src/ops/ci
RUN poetry export --only app_bi_api --without-hashes --format=requirements.txt > requirements.txt
RUN pip install -r requirements.txt
RUN pip install --no-deps --ignore-installed -r docker_image_base_ci/requirements_conflicting.txt
RUN pip install --no-deps /src/mainrepo/lib/bi_connector_bigquery
RUN pip install --index-url https://pypi.yandex-team.ru/simple --no-deps --ignore-installed --force-reinstall "$(cat requirements.txt | grep certifi-yandex)"

EXPOSE 80
