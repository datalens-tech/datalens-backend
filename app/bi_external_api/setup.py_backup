#!/usr/bin/env python3
from __future__ import annotations

import os
from setuptools import setup, find_packages


__version__ = "0.65.0"


PKG_DIR = os.path.dirname(os.path.abspath(__file__))
BACKEND_ROOT_DIR = os.path.dirname(os.path.dirname(PKG_DIR)).strip("/")
SETUP_KWARGS = dict(
    name="bi-external-api",
    version=__version__,
    author="Konstantin Chupin",
    author_email="kchupin@yandex-team.ru",
    packages=find_packages(exclude=["bi_external_api_tests"]),
    zip_safe=False,
    include_package_data=True,
    python_requires=">3.8.0",
    install_requires=[
        "aiohttp",
        "grpcio-health-checking",
        "grpcio-reflection",
    ] + [
        f"{name} @ file://localhost/{BACKEND_ROOT_DIR}/lib/{pydir}"
        for name, pydir in (
            ("dynamic-enum", "dynamic_enum"),
            ("yandex-bi-api-commons", "bi_api_commons"),
            ("yandex-bi-api-commons-ya-cloud", "bi_api_commons_ya_cloud"),
            ("yandex-bi-api-commons-ya-team", "bi_api_commons_ya_team"),
            ("yandex-bi-constants", "bi_constants"),
            ("yandex-bi-core", "bi_core"),
            ("yandex-bi-model-tools", "bi_model_tools"),
            ("yandex-bi-api-lib", "bi_api_lib"),
            ("yandex-bi-us-client", "bi_us_client"),
        )
        if os.path.exists(f"/{BACKEND_ROOT_DIR}/lib/{pydir}")
    ],
    extras_require={
        "bi_external_api_tests": [
            "pytest",
        ] + [
            f"{name} @ file://localhost/{BACKEND_ROOT_DIR}/lib/{pydir}"
            for name, pydir in (
                ("yandex-bi-core-testing", "bi_core_testing"),
            )
            if os.path.exists(f"/{BACKEND_ROOT_DIR}/lib/{pydir}")
         ],
    }
)
SETUP_KWARGS["extras_require"]["all"] = sorted(set(
    pkg for lst in SETUP_KWARGS["extras_require"].values() for pkg in lst
))


if __name__ == "__main__":
    setup(**SETUP_KWARGS)
