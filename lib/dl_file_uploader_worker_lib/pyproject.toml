[tool.poetry]
authors = ["DataLens Team <datalens-opensource@yandex-team.ru>"]
description = ""
license = "Apache 2.0"
name = "dl-file-uploader-worker-lib"
packages = [{include = "dl_file_uploader_worker_lib"}]
readme = "README.md"
version = "0.0.0"

[tool.poetry.dependencies]
aiogoogle = "*"
aiohttp = "*"
arq = "*"
attrs = "*"
botocore = "*"
clickhouse-sqlalchemy = {path = "../clickhouse-sqlalchemy"}
dl-api-commons = {path = "../dl_api_commons"}
dl-app-tools = {path = "../dl_app_tools"}
dl-configs = {path = "../dl_configs"}
dl-connector-bundle-chs3 = {path = "../dl_connector_bundle_chs3"}
dl-connector-clickhouse = {path = "../dl_connector_clickhouse"}
dl-constants = {path = "../dl_constants"}
dl-core = {path = "../dl_core"}
dl-file-uploader-lib = {path = "../dl_file_uploader_lib"}
dl-file-uploader-task-interface = {path = "../dl_file_uploader_task_interface"}
dl-s3 = {path = "../dl_s3"}
dl-task-processor = {path = "../dl_task_processor"}
dl-type-transformer = {path = "../dl_type_transformer"}
dl-utils = {path = "../dl_utils"}
faust-cchardet = "*"
pydantic = "*"
python = ">=3.10, <3.13"
redis = "*"
shortuuid = "*"

[tool.poetry.group.tests.dependencies]
dl-core-testing = {path = "../dl_core_testing"}
dl-file-secure-reader-lib = {path = "../dl_file_secure_reader_lib"}
dl-testing = {path = "../dl_testing"}
pytest = "*"
pytest-asyncio = "*"

[tool.deptry.package_module_name_map]
faust-cchardet = "cchardet"

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true
exclude = ["dl_file_uploader_worker_lib_tests"]
strict_optional = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["aiogoogle.*", "cchardet.*", "clickhouse_sqlalchemy.*", "mypy_boto3_s3.*", "types_aiobotocore_s3.*"]

[tool.pytest.ini_options]
addopts = "-ra"
minversion = "6.0"
testpaths = ["dl_file_uploader_worker_lib_tests/db", "dl_file_uploader_worker_lib_tests/ext", "dl_file_uploader_worker_lib_tests/unit"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[datalens.pytest.ext]
labels = ["ext_public"]
root_dir = "dl_file_uploader_worker_lib_tests/"
target_path = "ext"

[datalens.pytest.local]
root_dir = "dl_file_uploader_worker_lib_tests/"
target_path = "db unit"
