[tool.poetry]
authors = ["DataLens Team <datalens-opensource@yandex-team.ru>"]
description = ""
license = "Apache 2.0"
name = "dl-api-commons"
packages = [{include = "dl_api_commons"}]
readme = "README.md"
version = "0.0.1"

[tool.poetry.dependencies]
aiohttp = "*"
attrs = "*"
dl-app-tools = {path = "../dl_app_tools"}
dl-auth = {path = "../dl_auth"}
dl-constants = {path = "../dl_constants"}
dl-retrier = {path = "../dl_retrier"}
dl-utils = {path = "../dl_utils"}
flask = "*"
marshmallow = "*"
multidict = "*"
opentracing = "*"
python = ">=3.10, <3.13"
requests = "*"
sentry-sdk = {extras = ["flask"], version = "*"}
typing-extensions = "*"
werkzeug = "*"

[tool.poetry.group.tests.dependencies]
pytest = "*"
pytest-asyncio = "*"
shortuuid = "*"
statcommons = {path = "../statcommons"}

[tool.deptry.per_rule_ignores]
DEP001 = ["uwsgidecorators"]

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true
strict_optional = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
  "statcommons.*",
]

[tool.pytest.ini_options]
addopts = "-ra"
minversion = "6.0"
testpaths = []

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[datalens.pytest.unit]
labels = ["no_compose"]
root_dir = "dl_api_commons_tests/"
skip_compose = "true"
target_path = "unit"
