
[tool.poetry]
name = "yandex-bi-legacy-test-bundle"
version = "0.0.1"
description = ""
authors = ["Package Author <bipackageauthor@yandex-team.ru>"]
packages = [{include = "bi_legacy_test_bundle"}]
license = "MIT"
readme = "README.md"


[tool.poetry.dependencies]
attrs = ">=22.2.0"
python = ">=3.10, <3.12"
yandex-bi-constants = {path = "../../mainrepo/lib/bi_constants"}

[tool.poetry.group.tests.dependencies]
# common
pytest = ">=7.2.2"
pytest-asyncio = ">=0.20.3"
sentry-sdk = ">=1.15.0"
sqlalchemy-metrika-api = {path = "../../lib/sqlalchemy_metrika_api"}
# core
yandex-bi-api-commons-ya-cloud = {path = "../../lib/bi_api_commons_ya_cloud"}
yandex-bi-api-commons-ya-team = {path = "../../lib/bi_api_commons_ya_team"}
yandex-bi-connector-bundle-ch-filtered = {path = "../../lib/bi_connector_bundle_ch_filtered"}
yandex-bi-connector-chyt-internal = {path = "../../lib/bi_connector_chyt_internal"}
yandex-bi-connector-metrica = {path = "../../lib/bi_connector_metrica"}
yandex-bi-connector-mysql = {path = "../../lib/bi_connector_mysql"}
yandex-bi-connector-postgresql = {path = "../../mainrepo/lib/bi_connector_postgresql"}
yandex-bi-compeng-pg = {path = "../../mainrepo/lib/bi_compeng_pg"}
yandex-bi-connector-bundle-chs3 = {path = "../../mainrepo/lib/bi_connector_bundle_chs3"}
yandex-bi-connector-clickhouse = {path = "../../mainrepo/lib/bi_connector_clickhouse"}
yandex-bi-connector-mssql = {path = "../../mainrepo/lib/bi_connector_mssql"}
yandex-bi-connector-oracle = {path = "../../mainrepo/lib/bi_connector_oracle"}
yandex-bi-core = {path = "../../mainrepo/lib/bi_core"}
yandex-bi-core-testing = {path = "../../mainrepo/lib/bi_core_testing"}
yandex-bi-maintenance = {path = "../bi_maintenance"}
# api_lib
pytest-lazy-fixture = ">=0.6.3"
responses = ">=0.23.1"
uwsgi = ">=2.0.21"
yandex-bi-testing-ya = {path = "../../lib/bi_testing_ya"}
yandex-bi-api-lib = {path = "../../mainrepo/lib/bi_api_lib"}
yandex-bi-api-client = {path = "../../mainrepo/lib/bi_api_client"}
yandex-bi-api-lib-testing = {path = "../../mainrepo/lib/bi_api_lib_testing"}
yandex-bi-file-uploader-worker-lib = {path = "../../mainrepo/lib/bi_file_uploader_worker_lib"}
yandex-bi-testing = {path = "../../mainrepo/lib/bi_testing"}

[tool.mypy]
overrides = []

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = [
    "bi_legacy_test_bundle_tests/core/db",
    "bi_legacy_test_bundle_tests/core/ext",
    "bi_legacy_test_bundle_tests/core/unit",
    "bi_legacy_test_bundle_tests/db/data_api",
    "bi_legacy_test_bundle_tests/db/main",
    "bi_legacy_test_bundle_tests/ext",
    "bi_legacy_test_bundle_tests/unit",
]
timeout = 600

[tool.ruff]
line-length = 140
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I"
]

[tool.black]
line-length = 140
target-version = ['py310']

[datalens_ci]
skip_test = false

[datalens.pytest.core_unit]
root_dir = "bi_legacy_test_bundle_tests/core/"
target_path = "unit"
skip_compose = "true"

[datalens.pytest.core_db_part_1]
root_dir = "bi_legacy_test_bundle_tests/core/db/"
target_path = "aio caches capabilities common compeng"
compose_file_base = "docker-compose.core"
labels = ["fat"]
# todo: add "required_services" and run only them before starting tests with docker compose

[datalens.pytest.core_db_part_2]
root_dir = "bi_legacy_test_bundle_tests/core/db/"
target_path = "connectors data_processing maintenance services_registry us_manager"
compose_file_base = "docker-compose.core"
labels = ["fat"]

[datalens.pytest.core_db_connexecutors]
root_dir = "bi_legacy_test_bundle_tests/core/db/"
target_path = "conn_executors"
compose_file_base = "docker-compose.core"
labels = ["fat"]

#[datalens.pytest.ext]
#root_dir = "bi_legacy_test_bundle_tests/core/"
#target_path = "ext"
#compose_file_base = "docker-compose.core"
#labels = ["ext"]

[datalens.pytest.apilib_db]
root_dir = "bi_legacy_test_bundle_tests/api_lib"
target_path = "db"
compose_file_base = "docker-compose.api_lib"
labels = ["fat"]

[datalens.pytest.apilib_unit]
root_dir = "bi_legacy_test_bundle_tests/api_lib"
target_path = "unit"
skip_compose = "true"

[datalens.pytest.apilib_bitrix]
root_dir = "bi_legacy_test_bundle_tests/api_lib"
target_path = "ext/bitrix"
compose_file_base = "docker-compose.api_lib.bitrix"
labels = ["ext"]

[tool.poetry.scripts]
bi-core-rqe-async = "bi_core.connection_executors.remote_query_executor.app_async:async_qe_main"

[tool.mypy]
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
strict_optional = true
