
[tool.poetry]
name = "yandex-bi-connector-bundle-ch-frozen"
version = "0.0.1"
description = ""
authors = ["Grigorii Statsenko <gstatsenko@yandex-team.ru>"]
packages = [{include = "bi_connector_bundle_ch_frozen"}]
license = "MIT"
readme = "README.md"


[tool.poetry.dependencies]
python = ">=3.10, <3.12"
yandex-bi-connector-bundle-ch-filtered = {path = "../../lib/bi_connector_bundle_ch_filtered"}
datalens-api-commons = {path = "../../mainrepo/lib/dl_api_commons"}
datalens-constants = {path = "../../mainrepo/lib/dl_constants"}
datalens-i18n = {path = "../../mainrepo/lib/dl_i18n"}
datalens-configs = {path = "../../mainrepo/lib/dl_configs"}
datalens-api-connector = {path = "../../mainrepo/lib/dl_api_connector"}
datalens-core = {path = "../../mainrepo/lib/dl_core"}

[tool.poetry.plugins."dl_api_lib.connectors"]
ch_frozen_bumpy_roads = "bi_connector_bundle_ch_frozen.ch_frozen_bumpy_roads.bi.connector:CHFrozenBumpyRoadsApiConnector"
ch_frozen_covid = "bi_connector_bundle_ch_frozen.ch_frozen_covid.bi.connector:CHFrozenCovidApiConnector"
ch_frozen_demo = "bi_connector_bundle_ch_frozen.ch_frozen_demo.bi.connector:CHFrozenDemoApiConnector"
ch_frozen_dtp = "bi_connector_bundle_ch_frozen.ch_frozen_dtp.bi.connector:CHFrozenDTPApiConnector"
ch_frozen_gkh = "bi_connector_bundle_ch_frozen.ch_frozen_gkh.bi.connector:CHFrozenGKHApiConnector"
ch_frozen_horeca = "bi_connector_bundle_ch_frozen.ch_frozen_horeca.bi.connector:CHFrozenHorecaApiConnector"
ch_frozen_samples = "bi_connector_bundle_ch_frozen.ch_frozen_samples.bi.connector:CHFrozenSamplesApiConnector"
ch_frozen_transparency = "bi_connector_bundle_ch_frozen.ch_frozen_transparency.bi.connector:CHFrozenTransparencyApiConnector"
ch_frozen_weather = "bi_connector_bundle_ch_frozen.ch_frozen_weather.bi.connector:CHFrozenWeatherApiConnector"

[tool.poetry.plugins."dl_core.connectors"]
ch_frozen_bumpy_roads = "bi_connector_bundle_ch_frozen.ch_frozen_bumpy_roads.core.connector:CHFrozenBumpyRoadsCoreConnector"
ch_frozen_covid = "bi_connector_bundle_ch_frozen.ch_frozen_covid.core.connector:CHFrozenCovidCoreConnector"
ch_frozen_demo = "bi_connector_bundle_ch_frozen.ch_frozen_demo.core.connector:CHFrozenDemoCoreConnector"
ch_frozen_dtp = "bi_connector_bundle_ch_frozen.ch_frozen_dtp.core.connector:CHFrozenDTPCoreConnector"
ch_frozen_gkh = "bi_connector_bundle_ch_frozen.ch_frozen_gkh.core.connector:CHFrozenGKHCoreConnector"
ch_frozen_horeca = "bi_connector_bundle_ch_frozen.ch_frozen_horeca.core.connector:CHFrozenHorecaCoreConnector"
ch_frozen_samples = "bi_connector_bundle_ch_frozen.ch_frozen_samples.core.connector:CHFrozenSamplesCoreConnector"
ch_frozen_transparency = "bi_connector_bundle_ch_frozen.ch_frozen_transparency.core.connector:CHFrozenTransparencyCoreConnector"
ch_frozen_weather = "bi_connector_bundle_ch_frozen.ch_frozen_weather.core.connector:CHFrozenWeatherCoreConnector"

[tool.poetry.group.tests.dependencies]
pytest = ">=7.2.2"
pytest-asyncio = ">=0.20.3"
datalens-api-lib-testing = {path = "../../mainrepo/lib/dl_api_lib_testing"}
datalens-connector-clickhouse = {path = "../../mainrepo/lib/dl_connector_clickhouse"}
datalens-core-testing = {path = "../../mainrepo/lib/dl_core_testing"}

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = []



[datalens.pytest.db]
root_dir = "bi_connector_bundle_ch_frozen_tests/"
target_path = "db"

[datalens.pytest.unit]
root_dir = "bi_connector_bundle_ch_frozen_tests/"
target_path = "unit"
skip_compose = "true"
[tool.mypy]
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
strict_optional = true

[datalens.i18n.domains]
bi_connector_bundle_ch_frozen = [
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_base/bi"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_base/core"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_bumpy_roads/bi"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_bumpy_roads/core"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_covid/bi"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_covid/core"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_demo/bi"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_demo/core"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_dtp/bi"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_dtp/core"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_gkh/bi"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_gkh/core"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_horeca/bi"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_horeca/core"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_samples/bi"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_samples/core"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_transparency/bi"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_transparency/core"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_weather/bi"},
    {path = "bi_connector_bundle_ch_frozen/ch_frozen_weather/core"},
]
