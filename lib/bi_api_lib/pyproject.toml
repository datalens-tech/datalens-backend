
[tool.poetry]
name = "yandex-bi-api-lib"
version = "0.1970.0"
description = ""
authors = ["Datalens Backendovich <robot-datalens-back@yandex-team.ru>"]
packages = [{include = "bi_api_lib"}]
license = "MIT"
readme = "README.md"


[tool.poetry.dependencies]
aiohttp = ">=3.8.1"
attrs = ">=22.2.0"
bi-i18n = {path = "../../lib/bi_i18n"}
blinker = ">=1.5"
ciso8601 = ">=2.2.0"
flask = ">=2.0.3"
flask-marshmallow = ">=0.14.0"
flask-restx = ">=1.1.0"
flask-sqlalchemy = ">=2.5.1"
gunicorn = ">=20.1.0"
marshmallow = ">=3.19.0"
marshmallow-enum = ">=1.5.1"
marshmallow-oneofschema = ">=3.0.1"
marshmallow-sqlalchemy = ">=0.25.0"
more-itertools = ">=9.1.0"
pandas = ">=1.5.3"
pyjwt = ">=2.3.0"
pyopenssl = ">=21.0.0"
python = ">=3.10, <3.12"
python-dateutil = ">=2.8.2"
raven = ">=6.10.0"
requests = ">=2.28.2"
sentry-sdk = ">=1.15.0"
simplejson = ">=3.18.4"
sqlalchemy = ">=1.4.46, <2.0"
tabulate = ">=0.9.0"
uwsgi = ">=2.0.21"
werkzeug = ">=2.0.3"
yandex-bi-api-commons = {path = "../../lib/bi_api_commons"}
yandex-bi-api-commons-ya-cloud = {path = "../../lib/bi_api_commons_ya_cloud"}
yandex-bi-api-commons-ya-team = {path = "../../lib/bi_api_commons_ya_team"}
yandex-bi-api-connector = {path = "../../lib/bi_api_connector"}
yandex-bi-compeng-pg = {path = "../../lib/bi_compeng_pg"}
yandex-bi-connector-bitrix-gds = {path = "../../lib/bi_connector_bitrix_gds"}
yandex-bi-connector-bundle-ch-filtered = {path = "../../lib/bi_connector_bundle_ch_filtered"}
yandex-bi-connector-bundle-ch-filtered-ya-cloud = {path = "../../lib/bi_connector_bundle_ch_filtered_ya_cloud"}
yandex-bi-connector-bundle-ch-frozen = {path = "../../lib/bi_connector_bundle_ch_frozen"}
yandex-bi-connector-bundle-chs3 = {path = "../../lib/bi_connector_bundle_chs3"}
yandex-bi-connector-bundle-partners = {path = "../../lib/bi_connector_bundle_partners"}
yandex-bi-connector-chyt-internal = {path = "../../lib/bi_connector_chyt_internal"}
yandex-bi-connector-gsheets = {path = "../../lib/bi_connector_gsheets"}
yandex-bi-connector-metrica = {path = "../../lib/bi_connector_metrica"}
yandex-bi-connector-monitoring = {path = "../../lib/bi_connector_monitoring"}
yandex-bi-connector-mssql = {path = "../../lib/bi_connector_mssql"}
yandex-bi-connector-mysql = {path = "../../lib/bi_connector_mysql"}
yandex-bi-connector-oracle = {path = "../../lib/bi_connector_oracle"}
yandex-bi-connector-postgresql = {path = "../../lib/bi_connector_postgresql"}
yandex-bi-connector-promql = {path = "../../lib/bi_connector_promql"}
yandex-bi-connector-snowflake = {path = "../../lib/bi_connector_snowflake"}
yandex-bi-connector-usage-tracking-ya-team = {path = "../../lib/bi_connector_usage_tracking_ya_team"}
yandex-bi-connector-yql = {path = "../../lib/bi_connector_yql"}
yandex-bi-constants = {path = "../../lib/bi_constants"}
yandex-bi-core = {path = "../../lib/bi_core"}
yandex-bi-dls-client = {path = "../../lib/bi_dls_client"}
yandex-bi-model-tools = {path = "../../lib/bi_model_tools"}
yandex-bi-query-processing = {path = "../../lib/bi_query_processing"}
yandex-bi-service-registry-ya-cloud = {path = "../../lib/bi_service_registry_ya_cloud"}
yandex-bi-service-registry-ya-team = {path = "../../lib/bi_service_registry_ya_team"}

[tool.poetry.plugins."bi_api_lib.connectors"]
chs3_gsheets = "bi_api_lib.connectors.chs3_gsheets.connector:GSheetsFileS3BiApiConnector"
clickhouse = "bi_api_lib.connectors.clickhouse.connector:ClickHouseBiApiConnector"
file = "bi_api_lib.connectors.file.connector:FileS3BiApiConnector"
greenplum = "bi_api_lib.connectors.greenplum.connector:GreenplumBiApiConnector"
postgresql = "bi_api_lib.connectors.postgresql.connector:PostgreSQLBiApiConnector"
solomon = "bi_api_lib.connectors.solomon.connector:SolomonBiApiConnector"
ydb = "bi_api_lib.connectors.ydb.connector:YDBBiApiConnector"
yq = "bi_api_lib.connectors.yq.connector:YQBiApiConnector"

[tool.poetry.group.tests.dependencies]
pytest = ">=7.2.2"
pytest-asyncio = ">=0.20.3"
pytest-lazy-fixture = ">=0.6.3"
responses = ">=0.23.1"
uwsgi = ">=2.0.21"
yandex-bi-api-client = {path = "../../lib/bi_api_client"}
yandex-bi-api-lib-testing = {path = "../../lib/bi_api_lib_testing"}
yandex-bi-core-testing = {path = "../../lib/bi_core_testing"}
yandex-bi-file-uploader-worker-lib = {path = "../../lib/bi_file_uploader_worker_lib"}
yandex-bi-testing = {path = "../../lib/bi_testing"}
yandex-bi-testing-ya = {path = "../../lib/bi_testing_ya"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = ["bi_api_lib_tests/db/data_api", "bi_api_lib_tests/db/main", "bi_api_lib_tests/ext", "bi_api_lib_tests/unit"]

[tool.ruff]
line-length = 140
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I"
]

[tool.black]
line-length = 140
target-version = ['py310']


[tool.poetry.scripts]
bi-core-rqe-async = "bi_core.connection_executors.remote_query_executor.app_async:async_qe_main"


#[datalens.pytest.datacloud]
#root_dir = "bi_api_lib/"
#target_path = "datacloud"
#is_external = true

#[datalens.pytest.ext]
#root_dir = "bi_api_lib_tests/"
#target_path = "ext"
#labels = ["ext"]

[datalens.pytest.db]
root_dir = "bi_api_lib_tests/"
target_path = "db"
labels = ["fat"]

[datalens.pytest.unit]
root_dir = "bi_api_lib_tests/"
target_path = "unit"
skip_compose = "true"
