[tool.poetry]
name = "dl-sqlalchemy-metrica-api"
version = "0.0.1"
description = "Yandex Metrica API dialect for SQLAlchemy"
authors = ["DataLens Team <datalens-opensource@yandex-team.ru>"]
packages = [{include = "dl_sqlalchemy_metrica_api"}]
license = "Apache 2.0"
readme = "README.md"

[tool.poetry.dependencies]
SQLAlchemy = "*"
python = ">=3.10, <3.13"
python-dateutil = "*"
requests = "*"

[tool.deptry.package_module_name_map]
python-dateutil = "dateutil"

[tool.poetry.plugins."sqlalchemy.dialects"]
appmetrica_api = "dl_sqlalchemy_metrica_api.base:AppMetricaApiDialect"
metrika_api = "dl_sqlalchemy_metrica_api.base:MetrikaApiDialect"
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = []

[datalens.pytest.ext]
root_dir = "dl_sqlalchemy_metrica_api_tests/"
target_path = "ext"
labels = ["ext_public"]

[datalens.meta.mypy]
targets = []    # ignore mypy in entire module

[tool.mypy]
ignore_errors = true # ignore mypy in entire module
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
strict_optional = true
