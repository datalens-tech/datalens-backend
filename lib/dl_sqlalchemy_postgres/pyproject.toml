
[tool.poetry]
name = "dl-sqlalchemy-postgres"
version = "0.3"
description = "BI PostgreSQL SQLAlchemy Dialect"
authors = ["DataLens Team <datalens-opensource@yandex-team.ru>"]
packages = [{include = "dl_sqlalchemy_postgres"}]
license = "Apache 2.0"
readme = "README.rst"


[tool.poetry.dependencies]
asyncpg = "*"
psycopg2-binary = "*"
python = ">=3.10, <3.13"
sqlalchemy = "*"
dl-sqlalchemy-common = {path = "../dl_sqlalchemy_common"}

[tool.deptry.per_rule_ignores]
DEP002 = [
  "asyncpg",
  "psycopg2-binary",
]

[tool.poetry.plugins."sqlalchemy.dialects"]
bi_postgresql = "dl_sqlalchemy_postgres.base:BIPGDialect"
bi_postgresql_basic = "dl_sqlalchemy_postgres.base:BIPGDialectBasic"

[tool.poetry.group.tests.dependencies]
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = [
    "dl_sqlalchemy_postgres_tests/unit",
    "dl_sqlalchemy_postgres_tests/db",
]

[datalens.meta.mypy]
targets = []    # ignore mypy in entire module

[tool.mypy]
ignore_errors = true # ignore mypy in entire module
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
strict_optional = true
