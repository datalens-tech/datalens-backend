
[tool.poetry]
name = "datalens-api-lib"
version = "0.0.0"
description = ""
authors = ["DataLens Team <datalens-opensource@yandex-team.ru>"]
packages = [{include = "dl_api_lib"}]
license = "Apache 2.0"
readme = "README.md"

[tool.poetry.dependencies]
aiohttp = ">=3.9.1"
attrs = ">=22.2.0"
flask = ">=2.2.5"
flask-marshmallow = ">=1.1.0"
flask-restx = ">=1.1.0"
marshmallow = ">=3.19.0"
marshmallow-oneofschema = ">=3.0.1"
python = ">=3.10, <3.13"
werkzeug = ">=2.2.3"
statcommons = {path = "../statcommons"}
datalens-api-commons = {path = "../dl_api_commons"}
datalens-utils = {path = "../dl_utils"}
datalens-constants = {path = "../dl_constants"}
datalens-compeng-pg = {path = "../dl_compeng_pg"}
datalens-i18n = {path = "../dl_i18n"}
datalens-formula = {path = "../dl_formula"}
datalens-configs = {path = "../dl_configs"}
datalens-api-connector = {path = "../dl_api_connector"}
datalens-core = {path = "../dl_core"}
datalens-app-tools = {path = "../dl_app_tools"}
datalens-query-processing = {path = "../dl_query_processing"}
datalens-model-tools = {path = "../dl_model_tools"}
datalens-task-processor = {path = "../dl_task_processor"}
datalens-dashsql = {path = "../../lib/dl_dashsql"}
datalens-pivot = {path = "../dl_pivot"}
datalens-pivot-pandas = {path = "../dl_pivot_pandas"}
datalens-cache-engine = {path = "../dl_cache_engine"}
datalens-rls = {path = "../dl_rls"}

[tool.poetry.group.tests.dependencies]
pytest = ">=7.2.2"
pytest-asyncio = ">=0.20.3"
datalens-compeng-pg = {path = "../dl_compeng_pg"}
datalens-connector-clickhouse = {path = "../dl_connector_clickhouse"}
datalens-connector-postgresql = {path = "../dl_connector_postgresql"}
datalens-testing = {path = "../dl_testing"}
datalens-core-testing = {path = "../dl_core_testing"}

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = ["dl_api_lib_tests/unit", "dl_api_lib_tests/db"]
timeout = 600

[datalens.pytest.unit]
root_dir = "dl_api_lib_tests/"
target_path = "unit"
skip_compose = "true"

[datalens.pytest.db]
root_dir = "dl_api_lib_tests/"
target_path = "db"

[tool.poetry.scripts]
bi-core-rqe-async = "dl_core.connection_executors.remote_query_executor.app_async:async_qe_main"

[datalens.meta.mypy]
targets = ["dl_api_lib"]
implicit_dependencies = [
    "datalens-compeng-pg",
    "datalens-connector-postgresql",
]

[tool.mypy]
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "flask_restx.*",
    "statcommons.*",
    "flask_marshmallow"
]
ignore_missing_imports = true

[datalens.i18n.domains]
dl_api_lib = [
    {path = "dl_api_lib"},
]
