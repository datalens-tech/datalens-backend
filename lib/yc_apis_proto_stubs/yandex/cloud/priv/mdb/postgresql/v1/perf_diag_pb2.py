# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: yandex/cloud/priv/mdb/postgresql/v1/perf_diag.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n3yandex/cloud/priv/mdb/postgresql/v1/perf_diag.proto\x12#yandex.cloud.priv.mdb.postgresql.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd1\x04\n\x0cSessionState\x12(\n\x04time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0c\n\x04host\x18\x02 \x01(\t\x12\x0b\n\x03pid\x18\x03 \x01(\x03\x12\x10\n\x08\x64\x61tabase\x18\x04 \x01(\t\x12\x0c\n\x04user\x18\x05 \x01(\t\x12\x18\n\x10\x61pplication_name\x18\x06 \x01(\t\x12\x31\n\rbackend_start\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12.\n\nxact_start\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\x0bquery_start\x18\t \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x30\n\x0cstate_change\x18\n \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x17\n\x0fwait_event_type\x18\x0b \x01(\t\x12\x12\n\nwait_event\x18\x0c \x01(\t\x12\r\n\x05state\x18\r \x01(\t\x12\r\n\x05query\x18\x0e \x01(\t\x12\x14\n\x0c\x62\x61\x63kend_type\x18\x0f \x01(\t\x12\x13\n\x0b\x63lient_addr\x18\x10 \x01(\t\x12\x17\n\x0f\x63lient_hostname\x18\x11 \x01(\t\x12\x13\n\x0b\x63lient_port\x18\x12 \x01(\x03\x12\x13\n\x0b\x62\x61\x63kend_xid\x18\x13 \x01(\x03\x12\x14\n\x0c\x62\x61\x63kend_xmin\x18\x14 \x01(\x03\x12\x15\n\rblocking_pids\x18\x16 \x01(\t\x12\x10\n\x08query_id\x18\x17 \x01(\tJ\x04\x08\x15\x10\x16\"\x96\x04\n\tStatement\x12(\n\x04time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0c\n\x04host\x18\x02 \x01(\t\x12\x0c\n\x04user\x18\x03 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x04 \x01(\t\x12\x0f\n\x07queryid\x18\x05 \x01(\t\x12\r\n\x05query\x18\x06 \x01(\t\x12\r\n\x05\x63\x61lls\x18\x07 \x01(\x03\x12\x12\n\ntotal_time\x18\x08 \x01(\x01\x12\x10\n\x08min_time\x18\t \x01(\x01\x12\x10\n\x08max_time\x18\n \x01(\x01\x12\x11\n\tmean_time\x18\x0b \x01(\x01\x12\x13\n\x0bstddev_time\x18\x0c \x01(\x01\x12\x0c\n\x04rows\x18\r \x01(\x03\x12\x17\n\x0fshared_blks_hit\x18\x0e \x01(\x03\x12\x18\n\x10shared_blks_read\x18\x0f \x01(\x03\x12\x1b\n\x13shared_blks_dirtied\x18\x10 \x01(\x03\x12\x1b\n\x13shared_blks_written\x18\x11 \x01(\x03\x12\x15\n\rblk_read_time\x18\x12 \x01(\x01\x12\x16\n\x0e\x62lk_write_time\x18\x13 \x01(\x01\x12\x16\n\x0etemp_blks_read\x18\x14 \x01(\x03\x12\x19\n\x11temp_blks_written\x18\x15 \x01(\x03\x12\r\n\x05reads\x18\x16 \x01(\x03\x12\x0e\n\x06writes\x18\x17 \x01(\x03\x12\x11\n\tuser_time\x18\x18 \x01(\x01\x12\x13\n\x0bsystem_time\x18\x19 \x01(\x01\"h\n\x08Interval\x12.\n\nstart_time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x65nd_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\xfb\r\n\rDiffStatement\x12\x45\n\x0e\x66irst_interval\x18\x01 \x01(\x0b\x32-.yandex.cloud.priv.mdb.postgresql.v1.Interval\x12\x46\n\x0fsecond_interval\x18\x02 \x01(\x0b\x32-.yandex.cloud.priv.mdb.postgresql.v1.Interval\x12\x0c\n\x04host\x18\x03 \x01(\t\x12\x0c\n\x04user\x18\x04 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x05 \x01(\t\x12\x0f\n\x07queryid\x18\x06 \x01(\t\x12\r\n\x05query\x18\x07 \x01(\t\x12\x13\n\x0b\x66irst_calls\x18\x08 \x01(\x03\x12\x14\n\x0csecond_calls\x18\t \x01(\x03\x12\x18\n\x10\x66irst_total_time\x18\n \x01(\x01\x12\x19\n\x11second_total_time\x18\x0b \x01(\x01\x12\x16\n\x0e\x66irst_min_time\x18\x0c \x01(\x01\x12\x17\n\x0fsecond_min_time\x18\r \x01(\x01\x12\x16\n\x0e\x66irst_max_time\x18\x0e \x01(\x01\x12\x17\n\x0fsecond_max_time\x18\x0f \x01(\x01\x12\x17\n\x0f\x66irst_mean_time\x18\x10 \x01(\x01\x12\x18\n\x10second_mean_time\x18\x11 \x01(\x01\x12\x19\n\x11\x66irst_stddev_time\x18\x12 \x01(\x01\x12\x1a\n\x12second_stddev_time\x18\x13 \x01(\x01\x12\x12\n\nfirst_rows\x18\x14 \x01(\x03\x12\x13\n\x0bsecond_rows\x18\x15 \x01(\x03\x12\x1d\n\x15\x66irst_shared_blks_hit\x18\x16 \x01(\x03\x12\x1e\n\x16second_shared_blks_hit\x18\x17 \x01(\x03\x12\x1e\n\x16\x66irst_shared_blks_read\x18\x18 \x01(\x03\x12\x1f\n\x17second_shared_blks_read\x18\x19 \x01(\x03\x12!\n\x19\x66irst_shared_blks_dirtied\x18\x1a \x01(\x03\x12\"\n\x1asecond_shared_blks_dirtied\x18\x1b \x01(\x03\x12!\n\x19\x66irst_shared_blks_written\x18\x1c \x01(\x03\x12\"\n\x1asecond_shared_blks_written\x18\x1d \x01(\x03\x12\x1b\n\x13\x66irst_blk_read_time\x18\x1e \x01(\x01\x12\x1c\n\x14second_blk_read_time\x18\x1f \x01(\x01\x12\x1c\n\x14\x66irst_blk_write_time\x18  \x01(\x01\x12\x1d\n\x15second_blk_write_time\x18! \x01(\x01\x12\x1c\n\x14\x66irst_temp_blks_read\x18\" \x01(\x03\x12\x1d\n\x15second_temp_blks_read\x18# \x01(\x03\x12\x1f\n\x17\x66irst_temp_blks_written\x18$ \x01(\x03\x12 \n\x18second_temp_blks_written\x18% \x01(\x03\x12\x13\n\x0b\x66irst_reads\x18& \x01(\x03\x12\x14\n\x0csecond_reads\x18\' \x01(\x03\x12\x14\n\x0c\x66irst_writes\x18( \x01(\x03\x12\x15\n\rsecond_writes\x18) \x01(\x03\x12\x17\n\x0f\x66irst_user_time\x18* \x01(\x01\x12\x18\n\x10second_user_time\x18+ \x01(\x01\x12\x19\n\x11\x66irst_system_time\x18, \x01(\x01\x12\x1a\n\x12second_system_time\x18- \x01(\x01\x12\x12\n\ndiff_calls\x18. \x01(\x01\x12\x17\n\x0f\x64iff_total_time\x18/ \x01(\x01\x12\x15\n\rdiff_min_time\x18\x30 \x01(\x01\x12\x15\n\rdiff_max_time\x18\x31 \x01(\x01\x12\x16\n\x0e\x64iff_mean_time\x18\x32 \x01(\x01\x12\x18\n\x10\x64iff_stddev_time\x18\x33 \x01(\x01\x12\x11\n\tdiff_rows\x18\x34 \x01(\x01\x12\x1c\n\x14\x64iff_shared_blks_hit\x18\x35 \x01(\x01\x12\x1d\n\x15\x64iff_shared_blks_read\x18\x36 \x01(\x01\x12 \n\x18\x64iff_shared_blks_dirtied\x18\x37 \x01(\x01\x12 \n\x18\x64iff_shared_blks_written\x18\x38 \x01(\x01\x12\x1a\n\x12\x64iff_blk_read_time\x18\x39 \x01(\x01\x12\x1b\n\x13\x64iff_blk_write_time\x18: \x01(\x01\x12\x1b\n\x13\x64iff_temp_blks_read\x18; \x01(\x01\x12\x1e\n\x16\x64iff_temp_blks_written\x18< \x01(\x01\x12\x12\n\ndiff_reads\x18= \x01(\x01\x12\x13\n\x0b\x64iff_writes\x18> \x01(\x01\x12\x16\n\x0e\x64iff_user_time\x18? \x01(\x01\x12\x18\n\x10\x64iff_system_time\x18@ \x01(\x01\"o\n\nPrimaryKey\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04user\x18\x02 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x04 \x01(\t\x12\x10\n\x08toplevel\x18\x05 \x01(\x08\x12\x10\n\x08query_id\x18\x06 \x01(\t\x12\x0f\n\x07plan_id\x18\x07 \x01(\t\"\x9c\t\n\nQueryStats\x12(\n\x04time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\r\n\x05query\x18\x02 \x01(\t\x12\x17\n\x0fnormalized_plan\x18\x03 \x01(\t\x12\x14\n\x0c\x65xample_plan\x18\x04 \x01(\t\x12\r\n\x05plans\x18\x05 \x01(\x03\x12\x17\n\x0ftotal_plan_time\x18\x06 \x01(\x01\x12\x15\n\rmin_plan_time\x18\x07 \x01(\x01\x12\x15\n\rmax_plan_time\x18\x08 \x01(\x01\x12\x16\n\x0emean_plan_time\x18\t \x01(\x01\x12\x18\n\x10stddev_plan_time\x18\n \x01(\x01\x12\r\n\x05\x63\x61lls\x18\x0b \x01(\x03\x12\x12\n\ntotal_time\x18\x0c \x01(\x01\x12\x10\n\x08min_time\x18\r \x01(\x01\x12\x10\n\x08max_time\x18\x0e \x01(\x01\x12\x11\n\tmean_time\x18\x0f \x01(\x01\x12\x13\n\x0bstddev_time\x18\x10 \x01(\x01\x12\x0c\n\x04rows\x18\x11 \x01(\x03\x12\x17\n\x0fshared_blks_hit\x18\x12 \x01(\x03\x12\x18\n\x10shared_blks_read\x18\x13 \x01(\x03\x12\x1b\n\x13shared_blks_dirtied\x18\x14 \x01(\x03\x12\x1b\n\x13shared_blks_written\x18\x15 \x01(\x03\x12\x16\n\x0elocal_blks_hit\x18\x16 \x01(\x03\x12\x17\n\x0flocal_blks_read\x18\x17 \x01(\x03\x12\x1a\n\x12local_blks_dirtied\x18\x18 \x01(\x03\x12\x1a\n\x12local_blks_written\x18\x19 \x01(\x03\x12\x16\n\x0etemp_blks_read\x18\x1a \x01(\x03\x12\x19\n\x11temp_blks_written\x18\x1b \x01(\x03\x12\x15\n\rblk_read_time\x18\x1c \x01(\x01\x12\x16\n\x0e\x62lk_write_time\x18\x1d \x01(\x01\x12\x1a\n\x12temp_blk_read_time\x18\x1e \x01(\x01\x12\x1b\n\x13temp_blk_write_time\x18\x1f \x01(\x01\x12\x13\n\x0bwal_records\x18  \x01(\x03\x12\x0f\n\x07wal_fpi\x18! \x01(\x03\x12\x11\n\twal_bytes\x18\" \x01(\x03\x12\x15\n\rjit_functions\x18# \x01(\x03\x12\x1b\n\x13jit_generation_time\x18$ \x01(\x01\x12\x1a\n\x12jit_inlining_count\x18% \x01(\x03\x12\x19\n\x11jit_inlining_time\x18& \x01(\x01\x12\x1e\n\x16jit_optimization_count\x18\' \x01(\x03\x12\x1d\n\x15jit_optimization_time\x18( \x01(\x01\x12\x1a\n\x12jit_emission_count\x18) \x01(\x03\x12\x19\n\x11jit_emission_time\x18* \x01(\x01\x12\x14\n\x0cstartup_cost\x18+ \x01(\x03\x12\x12\n\ntotal_cost\x18, \x01(\x03\x12\x11\n\tplan_rows\x18- \x01(\x03\x12\x12\n\nplan_width\x18. \x01(\x03\x12\r\n\x05reads\x18/ \x01(\x03\x12\x0e\n\x06writes\x18\x30 \x01(\x03\x12\x11\n\tuser_time\x18\x31 \x01(\x01\x12\x13\n\x0bsystem_time\x18\x32 \x01(\x01\"\x8e\x01\n\x0eQueryStatement\x12<\n\x03key\x18\x01 \x01(\x0b\x32/.yandex.cloud.priv.mdb.postgresql.v1.PrimaryKey\x12>\n\x05stats\x18\x02 \x01(\x0b\x32/.yandex.cloud.priv.mdb.postgresql.v1.QueryStats\"\xd0\x02\n\x12\x44iffQueryStatement\x12<\n\x03key\x18\x01 \x01(\x0b\x32/.yandex.cloud.priv.mdb.postgresql.v1.PrimaryKey\x12\r\n\x05query\x18\x02 \x01(\t\x12\x17\n\x0fnormalized_plan\x18\x03 \x01(\t\x12\x14\n\x0c\x65xample_plan\x18\x04 \x01(\t\x12>\n\x05\x66irst\x18\x05 \x01(\x0b\x32/.yandex.cloud.priv.mdb.postgresql.v1.QueryStats\x12?\n\x06second\x18\x06 \x01(\x0b\x32/.yandex.cloud.priv.mdb.postgresql.v1.QueryStats\x12=\n\x04\x64iff\x18\x07 \x01(\x0b\x32/.yandex.cloud.priv.mdb.postgresql.v1.QueryStatsBeB\x06PPDIAGZ[a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/mdb/postgresql/v1;postgresqlb\x06proto3')



_SESSIONSTATE = DESCRIPTOR.message_types_by_name['SessionState']
_STATEMENT = DESCRIPTOR.message_types_by_name['Statement']
_INTERVAL = DESCRIPTOR.message_types_by_name['Interval']
_DIFFSTATEMENT = DESCRIPTOR.message_types_by_name['DiffStatement']
_PRIMARYKEY = DESCRIPTOR.message_types_by_name['PrimaryKey']
_QUERYSTATS = DESCRIPTOR.message_types_by_name['QueryStats']
_QUERYSTATEMENT = DESCRIPTOR.message_types_by_name['QueryStatement']
_DIFFQUERYSTATEMENT = DESCRIPTOR.message_types_by_name['DiffQueryStatement']
SessionState = _reflection.GeneratedProtocolMessageType('SessionState', (_message.Message,), {
  'DESCRIPTOR' : _SESSIONSTATE,
  '__module__' : 'yandex.cloud.priv.mdb.postgresql.v1.perf_diag_pb2'
  # @@protoc_insertion_point(class_scope:yandex.cloud.priv.mdb.postgresql.v1.SessionState)
  })
_sym_db.RegisterMessage(SessionState)

Statement = _reflection.GeneratedProtocolMessageType('Statement', (_message.Message,), {
  'DESCRIPTOR' : _STATEMENT,
  '__module__' : 'yandex.cloud.priv.mdb.postgresql.v1.perf_diag_pb2'
  # @@protoc_insertion_point(class_scope:yandex.cloud.priv.mdb.postgresql.v1.Statement)
  })
_sym_db.RegisterMessage(Statement)

Interval = _reflection.GeneratedProtocolMessageType('Interval', (_message.Message,), {
  'DESCRIPTOR' : _INTERVAL,
  '__module__' : 'yandex.cloud.priv.mdb.postgresql.v1.perf_diag_pb2'
  # @@protoc_insertion_point(class_scope:yandex.cloud.priv.mdb.postgresql.v1.Interval)
  })
_sym_db.RegisterMessage(Interval)

DiffStatement = _reflection.GeneratedProtocolMessageType('DiffStatement', (_message.Message,), {
  'DESCRIPTOR' : _DIFFSTATEMENT,
  '__module__' : 'yandex.cloud.priv.mdb.postgresql.v1.perf_diag_pb2'
  # @@protoc_insertion_point(class_scope:yandex.cloud.priv.mdb.postgresql.v1.DiffStatement)
  })
_sym_db.RegisterMessage(DiffStatement)

PrimaryKey = _reflection.GeneratedProtocolMessageType('PrimaryKey', (_message.Message,), {
  'DESCRIPTOR' : _PRIMARYKEY,
  '__module__' : 'yandex.cloud.priv.mdb.postgresql.v1.perf_diag_pb2'
  # @@protoc_insertion_point(class_scope:yandex.cloud.priv.mdb.postgresql.v1.PrimaryKey)
  })
_sym_db.RegisterMessage(PrimaryKey)

QueryStats = _reflection.GeneratedProtocolMessageType('QueryStats', (_message.Message,), {
  'DESCRIPTOR' : _QUERYSTATS,
  '__module__' : 'yandex.cloud.priv.mdb.postgresql.v1.perf_diag_pb2'
  # @@protoc_insertion_point(class_scope:yandex.cloud.priv.mdb.postgresql.v1.QueryStats)
  })
_sym_db.RegisterMessage(QueryStats)

QueryStatement = _reflection.GeneratedProtocolMessageType('QueryStatement', (_message.Message,), {
  'DESCRIPTOR' : _QUERYSTATEMENT,
  '__module__' : 'yandex.cloud.priv.mdb.postgresql.v1.perf_diag_pb2'
  # @@protoc_insertion_point(class_scope:yandex.cloud.priv.mdb.postgresql.v1.QueryStatement)
  })
_sym_db.RegisterMessage(QueryStatement)

DiffQueryStatement = _reflection.GeneratedProtocolMessageType('DiffQueryStatement', (_message.Message,), {
  'DESCRIPTOR' : _DIFFQUERYSTATEMENT,
  '__module__' : 'yandex.cloud.priv.mdb.postgresql.v1.perf_diag_pb2'
  # @@protoc_insertion_point(class_scope:yandex.cloud.priv.mdb.postgresql.v1.DiffQueryStatement)
  })
_sym_db.RegisterMessage(DiffQueryStatement)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'B\006PPDIAGZ[a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/mdb/postgresql/v1;postgresql'
  _SESSIONSTATE._serialized_start=126
  _SESSIONSTATE._serialized_end=719
  _STATEMENT._serialized_start=722
  _STATEMENT._serialized_end=1256
  _INTERVAL._serialized_start=1258
  _INTERVAL._serialized_end=1362
  _DIFFSTATEMENT._serialized_start=1365
  _DIFFSTATEMENT._serialized_end=3152
  _PRIMARYKEY._serialized_start=3154
  _PRIMARYKEY._serialized_end=3265
  _QUERYSTATS._serialized_start=3268
  _QUERYSTATS._serialized_end=4448
  _QUERYSTATEMENT._serialized_start=4451
  _QUERYSTATEMENT._serialized_end=4593
  _DIFFQUERYSTATEMENT._serialized_start=4596
  _DIFFQUERYSTATEMENT._serialized_end=4932
# @@protoc_insertion_point(module_scope)
