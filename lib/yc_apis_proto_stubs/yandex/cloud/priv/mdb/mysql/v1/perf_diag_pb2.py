# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: yandex/cloud/priv/mdb/mysql/v1/perf_diag.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n.yandex/cloud/priv/mdb/mysql/v1/perf_diag.proto\x12\x1eyandex.cloud.priv.mdb.mysql.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xbb\x03\n\x0cSessionState\x12(\n\x04time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0c\n\x04host\x18\x02 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x0c\n\x04user\x18\x04 \x01(\t\x12\x0e\n\x06thd_id\x18\x05 \x01(\x03\x12\x0f\n\x07\x63onn_id\x18\x06 \x01(\x03\x12\x0f\n\x07\x63ommand\x18\x07 \x01(\t\x12\r\n\x05query\x18\x08 \x01(\t\x12\x0e\n\x06\x64igest\x18\t \x01(\t\x12\x15\n\rquery_latency\x18\n \x01(\x01\x12\x14\n\x0clock_latency\x18\x0b \x01(\x01\x12\r\n\x05stage\x18\x0c \x01(\t\x12\x15\n\rstage_latency\x18\r \x01(\x01\x12\x14\n\x0c\x63urrent_wait\x18\x0e \x01(\t\x12\x13\n\x0bwait_object\x18\x0f \x01(\t\x12\x14\n\x0cwait_latency\x18\x10 \x01(\x01\x12\x13\n\x0btrx_latency\x18\x11 \x01(\x01\x12\x16\n\x0e\x63urrent_memory\x18\x12 \x01(\x03\x12\x13\n\x0b\x63lient_addr\x18\x13 \x01(\t\x12\x17\n\x0f\x63lient_hostname\x18\x14 \x01(\t\x12\x13\n\x0b\x63lient_port\x18\x15 \x01(\x03\"\x8a\x05\n\tStatement\x12(\n\x04time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0c\n\x04host\x18\x02 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x03 \x01(\t\x12\x0e\n\x06\x64igest\x18\x04 \x01(\t\x12\r\n\x05query\x18\x05 \x01(\t\x12\x1b\n\x13total_query_latency\x18\x06 \x01(\x01\x12\x1a\n\x12total_lock_latency\x18\x07 \x01(\x01\x12\x19\n\x11\x61vg_query_latency\x18\x08 \x01(\x01\x12\x18\n\x10\x61vg_lock_latency\x18\t \x01(\x01\x12\r\n\x05\x63\x61lls\x18\n \x01(\x03\x12\x0e\n\x06\x65rrors\x18\x0b \x01(\x03\x12\x10\n\x08warnings\x18\x0c \x01(\x03\x12\x15\n\rrows_examined\x18\r \x01(\x03\x12\x11\n\trows_sent\x18\x0e \x01(\x03\x12\x15\n\rrows_affected\x18\x0f \x01(\x03\x12\x12\n\ntmp_tables\x18\x10 \x01(\x03\x12\x17\n\x0ftmp_disk_tables\x18\x11 \x01(\x03\x12\x18\n\x10select_full_join\x18\x12 \x01(\x03\x12\x1e\n\x16select_full_range_join\x18\x13 \x01(\x03\x12\x14\n\x0cselect_range\x18\x14 \x01(\x03\x12\x1a\n\x12select_range_check\x18\x15 \x01(\x03\x12\x13\n\x0bselect_scan\x18\x16 \x01(\x03\x12\x19\n\x11sort_merge_passes\x18\x17 \x01(\x03\x12\x12\n\nsort_range\x18\x18 \x01(\x03\x12\x11\n\tsort_rows\x18\x19 \x01(\x03\x12\x11\n\tsort_scan\x18\x1a \x01(\x03\x12\x15\n\rno_index_used\x18\x1b \x01(\x03\x12\x1a\n\x12no_good_index_used\x18\x1c \x01(\x03\"h\n\x08Interval\x12.\n\nstart_time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x65nd_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\xb3\x11\n\rDiffStatement\x12@\n\x0e\x66irst_interval\x18\x01 \x01(\x0b\x32(.yandex.cloud.priv.mdb.mysql.v1.Interval\x12\x41\n\x0fsecond_interval\x18\x02 \x01(\x0b\x32(.yandex.cloud.priv.mdb.mysql.v1.Interval\x12\x0c\n\x04host\x18\x03 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x04 \x01(\t\x12\x0e\n\x06\x64igest\x18\x05 \x01(\t\x12\r\n\x05query\x18\x06 \x01(\t\x12!\n\x19\x66irst_total_query_latency\x18\x07 \x01(\x01\x12 \n\x18\x66irst_total_lock_latency\x18\x08 \x01(\x01\x12\x1f\n\x17\x66irst_avg_query_latency\x18\t \x01(\x01\x12\x1e\n\x16\x66irst_avg_lock_latency\x18\n \x01(\x01\x12\x13\n\x0b\x66irst_calls\x18\x0b \x01(\x03\x12\x14\n\x0c\x66irst_errors\x18\x0c \x01(\x03\x12\x16\n\x0e\x66irst_warnings\x18\r \x01(\x03\x12\x1b\n\x13\x66irst_rows_examined\x18\x0e \x01(\x03\x12\x17\n\x0f\x66irst_rows_sent\x18\x0f \x01(\x03\x12\x1b\n\x13\x66irst_rows_affected\x18\x10 \x01(\x03\x12\x18\n\x10\x66irst_tmp_tables\x18\x11 \x01(\x03\x12\x1d\n\x15\x66irst_tmp_disk_tables\x18\x12 \x01(\x03\x12\x1e\n\x16\x66irst_select_full_join\x18\x13 \x01(\x03\x12$\n\x1c\x66irst_select_full_range_join\x18\x14 \x01(\x03\x12\x1a\n\x12\x66irst_select_range\x18\x15 \x01(\x03\x12 \n\x18\x66irst_select_range_check\x18\x16 \x01(\x03\x12\x19\n\x11\x66irst_select_scan\x18\x17 \x01(\x03\x12\x1f\n\x17\x66irst_sort_merge_passes\x18\x18 \x01(\x03\x12\x18\n\x10\x66irst_sort_range\x18\x19 \x01(\x03\x12\x17\n\x0f\x66irst_sort_rows\x18\x1a \x01(\x03\x12\x17\n\x0f\x66irst_sort_scan\x18\x1b \x01(\x03\x12\x1b\n\x13\x66irst_no_index_used\x18\x1c \x01(\x03\x12 \n\x18\x66irst_no_good_index_used\x18\x1d \x01(\x03\x12\"\n\x1asecond_total_query_latency\x18\x1e \x01(\x01\x12!\n\x19second_total_lock_latency\x18\x1f \x01(\x01\x12 \n\x18second_avg_query_latency\x18  \x01(\x01\x12\x1f\n\x17second_avg_lock_latency\x18! \x01(\x01\x12\x14\n\x0csecond_calls\x18\" \x01(\x03\x12\x15\n\rsecond_errors\x18# \x01(\x03\x12\x17\n\x0fsecond_warnings\x18$ \x01(\x03\x12\x1c\n\x14second_rows_examined\x18% \x01(\x03\x12\x18\n\x10second_rows_sent\x18& \x01(\x03\x12\x1c\n\x14second_rows_affected\x18\' \x01(\x03\x12\x19\n\x11second_tmp_tables\x18( \x01(\x03\x12\x1e\n\x16second_tmp_disk_tables\x18) \x01(\x03\x12\x1f\n\x17second_select_full_join\x18* \x01(\x03\x12%\n\x1dsecond_select_full_range_join\x18+ \x01(\x03\x12\x1b\n\x13second_select_range\x18, \x01(\x03\x12!\n\x19second_select_range_check\x18- \x01(\x03\x12\x1a\n\x12second_select_scan\x18. \x01(\x03\x12 \n\x18second_sort_merge_passes\x18/ \x01(\x03\x12\x19\n\x11second_sort_range\x18\x30 \x01(\x03\x12\x18\n\x10second_sort_rows\x18\x31 \x01(\x03\x12\x18\n\x10second_sort_scan\x18\x32 \x01(\x03\x12\x1c\n\x14second_no_index_used\x18\x33 \x01(\x03\x12!\n\x19second_no_good_index_used\x18\x34 \x01(\x03\x12 \n\x18\x64iff_total_query_latency\x18\x35 \x01(\x01\x12\x1f\n\x17\x64iff_total_lock_latency\x18\x36 \x01(\x01\x12\x1e\n\x16\x64iff_avg_query_latency\x18\x37 \x01(\x01\x12\x1d\n\x15\x64iff_avg_lock_latency\x18\x38 \x01(\x01\x12\x12\n\ndiff_calls\x18\x39 \x01(\x01\x12\x13\n\x0b\x64iff_errors\x18: \x01(\x01\x12\x15\n\rdiff_warnings\x18; \x01(\x01\x12\x1a\n\x12\x64iff_rows_examined\x18< \x01(\x01\x12\x16\n\x0e\x64iff_rows_sent\x18= \x01(\x01\x12\x1a\n\x12\x64iff_rows_affected\x18> \x01(\x01\x12\x17\n\x0f\x64iff_tmp_tables\x18? \x01(\x01\x12\x1c\n\x14\x64iff_tmp_disk_tables\x18@ \x01(\x01\x12\x1d\n\x15\x64iff_select_full_join\x18\x41 \x01(\x01\x12#\n\x1b\x64iff_select_full_range_join\x18\x42 \x01(\x01\x12\x19\n\x11\x64iff_select_range\x18\x43 \x01(\x01\x12\x1f\n\x17\x64iff_select_range_check\x18\x44 \x01(\x01\x12\x18\n\x10\x64iff_select_scan\x18\x45 \x01(\x01\x12\x1e\n\x16\x64iff_sort_merge_passes\x18\x46 \x01(\x01\x12\x17\n\x0f\x64iff_sort_range\x18G \x01(\x01\x12\x16\n\x0e\x64iff_sort_rows\x18H \x01(\x01\x12\x16\n\x0e\x64iff_sort_scan\x18I \x01(\x01\x12\x1a\n\x12\x64iff_no_index_used\x18J \x01(\x01\x12\x1f\n\x17\x64iff_no_good_index_used\x18K \x01(\x01\x42[B\x06PMDIAGZQa.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/mdb/mysql/v1;mysqlb\x06proto3')



_SESSIONSTATE = DESCRIPTOR.message_types_by_name['SessionState']
_STATEMENT = DESCRIPTOR.message_types_by_name['Statement']
_INTERVAL = DESCRIPTOR.message_types_by_name['Interval']
_DIFFSTATEMENT = DESCRIPTOR.message_types_by_name['DiffStatement']
SessionState = _reflection.GeneratedProtocolMessageType('SessionState', (_message.Message,), {
  'DESCRIPTOR' : _SESSIONSTATE,
  '__module__' : 'yandex.cloud.priv.mdb.mysql.v1.perf_diag_pb2'
  # @@protoc_insertion_point(class_scope:yandex.cloud.priv.mdb.mysql.v1.SessionState)
  })
_sym_db.RegisterMessage(SessionState)

Statement = _reflection.GeneratedProtocolMessageType('Statement', (_message.Message,), {
  'DESCRIPTOR' : _STATEMENT,
  '__module__' : 'yandex.cloud.priv.mdb.mysql.v1.perf_diag_pb2'
  # @@protoc_insertion_point(class_scope:yandex.cloud.priv.mdb.mysql.v1.Statement)
  })
_sym_db.RegisterMessage(Statement)

Interval = _reflection.GeneratedProtocolMessageType('Interval', (_message.Message,), {
  'DESCRIPTOR' : _INTERVAL,
  '__module__' : 'yandex.cloud.priv.mdb.mysql.v1.perf_diag_pb2'
  # @@protoc_insertion_point(class_scope:yandex.cloud.priv.mdb.mysql.v1.Interval)
  })
_sym_db.RegisterMessage(Interval)

DiffStatement = _reflection.GeneratedProtocolMessageType('DiffStatement', (_message.Message,), {
  'DESCRIPTOR' : _DIFFSTATEMENT,
  '__module__' : 'yandex.cloud.priv.mdb.mysql.v1.perf_diag_pb2'
  # @@protoc_insertion_point(class_scope:yandex.cloud.priv.mdb.mysql.v1.DiffStatement)
  })
_sym_db.RegisterMessage(DiffStatement)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'B\006PMDIAGZQa.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/mdb/mysql/v1;mysql'
  _SESSIONSTATE._serialized_start=116
  _SESSIONSTATE._serialized_end=559
  _STATEMENT._serialized_start=562
  _STATEMENT._serialized_end=1212
  _INTERVAL._serialized_start=1214
  _INTERVAL._serialized_end=1318
  _DIFFSTATEMENT._serialized_start=1321
  _DIFFSTATEMENT._serialized_end=3548
# @@protoc_insertion_point(module_scope)
