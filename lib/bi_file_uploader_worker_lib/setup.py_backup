#!/usr/bin/env python3

from __future__ import annotations

import os
from setuptools import setup, find_packages


PKG_DIR = os.path.dirname(os.path.abspath(__file__))
BACKEND_ROOT_DIR = os.path.dirname(os.path.dirname(PKG_DIR)).strip("/")
SETUP_KWARGS = dict(
    name="yandex-bi-file-uploader-worker-lib",
    author="Aleksei Konstantinov",
    author_email="konstasa@yandex-team.ru",
    packages=find_packages(exclude=["bi_file_uploader_worker_lib_tests*"]),
    zip_safe=False,

    include_package_data=True,
    package_data={
        "*": [
            "py.typed",
        ],
    },
    entry_points={},
    install_requires=[
        "aiohttp",
        "aiogoogle",
        "attrs",
    ] + [
        f"{name} @ file://localhost/{BACKEND_ROOT_DIR}/lib/{pydir}"
        for name, pydir in (
            ("yandex-bi-file-uploader-lib", "bi_file_uploader_lib"),
            ("bi-file-uploader-task-interface", "bi_file_uploader_task_interface"),
            ("yandex-bi-connector-bundle-chs3", "bi_connector_bundle_chs3"),
            ("yandex-bi-core", "bi_core"),
            ("yandex-bi-api-commons", "bi_api_commons"),
            ("yandex-bi-app-tools", "bi_app_tools"),
            ("bi-task-processor", "bi_task_processor"),
        )
        if os.path.exists(f"/{BACKEND_ROOT_DIR}/lib/{pydir}")
    ],
    extras_require={
        'develop': [
            f"{name} @ file://localhost/{BACKEND_ROOT_DIR}/lib/{pydir}"
            for name, pydir in (
                ("yandex-bi-core-testing", "bi_core_testing"),
            )
            if os.path.exists(f"/{BACKEND_ROOT_DIR}/lib/{pydir}")
        ]
    },
)
SETUP_KWARGS["extras_require"]["all"] = sorted(set(
    pkg for lst in SETUP_KWARGS["extras_require"].values() for pkg in lst
))


if __name__ == "__main__":
    setup(**SETUP_KWARGS)
