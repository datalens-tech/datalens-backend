
[tool.poetry]
name = "datalens-connector-postgresql"
version = "0.0.1"
description = ""
authors = ["DataLens Team <datalens-opensource@yandex-team.ru>"]
packages = [{include = "dl_connector_postgresql"}]
license = "Apache 2.0"
readme = "README.md"


[tool.poetry.dependencies]
asyncpg = ">=0.29.0"
attrs = ">=22.2.0"
marshmallow = ">=3.19.0"
psycopg2-binary = ">=2.9.9"
python = ">=3.10, <3.13"
python-dateutil = ">=2.8.2"
sqlalchemy = ">=1.4.52, <2.0"
datalens-api-commons = {path = "../dl_api_commons"}
datalens-sqlalchemy-postgres = {path = "../dl_sqlalchemy_postgres"}
datalens-constants = {path = "../dl_constants"}
datalens-formula-ref = {path = "../dl_formula_ref"}
datalens-i18n = {path = "../dl_i18n"}
datalens-formula = {path = "../dl_formula"}
datalens-configs = {path = "../dl_configs"}
datalens-api-connector = {path = "../dl_api_connector"}
datalens-core = {path = "../dl_core"}
datalens-app-tools = {path = "../dl_app_tools"}
datalens-core-testing = {path = "../dl_core_testing"}
datalens-db-testing = {path = "../dl_db_testing"}

[tool.poetry.plugins]
[tool.poetry.plugins."dl_api_lib.connectors"]
postgresql = "dl_connector_postgresql.api.connector:PostgreSQLApiConnector"

[tool.poetry.plugins."dl_core.connectors"]
postgresql = "dl_connector_postgresql.core.postgresql.connector:PostgreSQLCoreConnector"

[tool.poetry.plugins."dl_db_testing.connectors"]
postgresql = "dl_connector_postgresql.db_testing.connector:PostgreSQLDbTestingConnector"

[tool.poetry.plugins."dl_formula.connectors"]
postgresql = "dl_connector_postgresql.formula.connector:PostgreSQLFormulaConnector"

[tool.poetry.plugins."dl_formula_ref.plugins"]
postgresql = "dl_connector_postgresql.formula_ref.plugin:PostgresSQLFormulaRefPlugin"

[tool.poetry.group]
[tool.poetry.group.tests.dependencies]
aiohttp = ">=3.9.1"
pytest = ">=7.2.2"
pytest-asyncio = ">=0.20.3"
pytz = ">=2022.7.1"
shortuuid = ">=1.0.11"
datalens-api-lib-testing = {path = "../dl_api_lib_testing"}
datalens-api-client = {path = "../dl_api_client"}
datalens-formula-testing = {path = "../dl_formula_testing"}
datalens-query-processing = {path = "../dl_query_processing"}
datalens-testing = {path = "../dl_testing"}

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = ["dl_connector_postgresql_tests/db", "dl_connector_postgresql_tests/unit"]



[datalens.pytest.local]
root_dir = "dl_connector_postgresql_tests/"
target_path = "db unit"

[tool.mypy]
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
strict_optional = true

[[tool.mypy.overrides]]
module = "dl_sqlalchemy_postgres.*"
ignore_missing_imports = true

[datalens.i18n.domains]
dl_connector_postgresql = [
    {path = "dl_connector_postgresql/api"},
    {path = "dl_connector_postgresql/core"},
]
dl_formula_ref_dl_connector_postgresql = [
    {path = "dl_connector_postgresql/formula_ref"},
]
