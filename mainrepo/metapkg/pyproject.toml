[tool.poetry]
name = "datalens-ci-migration"
version = "0.1.0"
description = ""
authors = ["Valentin Gologuzov <vgol@double.cloud>"]
license = "MIT"
packages = [{include = "bi_ci_dummy"}]

[tool.poetry.dependencies]
python = ">=3.10, <3.12"
aiohttp = "==3.8.5"
attrs = "==22.2.0"
certifi = "==2022.12.7"
marshmallow = "==3.19.0"
sentry-sdk = "==1.15.0"
pyyaml = "==5.3.1"
SQLAlchemy = "==1.4.46, <2.0"
shortuuid = "==1.0.11"
sqlalchemy = "==1.4.46, <2.0"
Flask = "==2.0.3"
Werkzeug = "==2.0.3"
ipdb = "==0.13.13"
ipython = "==8.10.0"
marshmallow-oneofschema = "==3.0.1"
pandas = "==1.5.3"
python-dateutil = "==2.8.2"
raven = "==6.10.0"
requests = "==2.28.2"
async-timeout = "==4.0.2"
psycopg2-binary = "==2.9.6"
pytz = "==2022.7.1"
werkzeug = "==2.0.3"
flask = "==2.0.3"
oracledb = "==1.3.1"
yarl = "==1.8.2"
mysqlclient = "==1.4.6"
pyodbc = "==4.0.35"
Babel = "==2.12.1"
jinja2 = "==3.1.2"
opentracing = "==2.4.0"
typing-extensions = "==4.5.0"
pytest = "==7.2.2"
cryptography = "==3.3.2"
typeguard = "==2.13.3"
more-itertools = "==9.1.0"



[tool.poetry.group.ci.dependencies]
boto3 = ">=1.24.59"  # TODO FIX: This is used in tests in some packages. Try to fix with dependency in relevant packages
#
# All apps should be listed here. This group is installed for CI & local development
#
yandex-bi-package-boilerplate = {path = "../lib/bi_package_boilerplate"}
yandex-bi-api-commons = {path = "../lib/bi_api_commons"}
yandex-bi-app-tools = {path = "../lib/bi_app_tools"}
yandex-bi-configs = {path = "../lib/bi_configs"}
yandex-bi-constants = {path = "../lib/bi_constants"}
yandex-bi-utils = {path = "../lib/bi_utils"}
dynamic-enum = {path = "../lib/dynamic_enum"}


#
# This section defines dependencies groups per app.
# To export/install specific app without other dependencies - use `--only` flag
# Group naming convention: `app_${APP_FOLDER_NAME}`
#

[tool.poetry.group.dev.dependencies]
black = "==23.3.0"
ruff = "==0.0.267"
ipdb = "==0.13.13"
mysqlclient = "==1.4.6"
psycopg2 = "==2.8.6"
pyodbc = "==4.0.35"
pytest = "==7.2.2"
python-dateutil = "==2.8.2"
pytest-asyncio = "==0.21.0"
uwsgi = "==2.0.21"
shortuuid = "==1.0.11"
sentry-sdk = "==1.15.0"
babel = "==2.12.1"
mock = "==4.0.3"
responses = "==0.23.1"
pytest-lazy-fixture = "==0.6.3"
pytz = "==2022.7.1"
oracledb = "==1.3.1"
psycopg2-binary = "==2.9.6"
tomlkit = "==0.11.8"
pandas = "==1.5.3"
platformdirs = "==3.8.0"
clize = "==5.0.0"
poetry = "==1.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 140
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I"

]

[tool.ruff.isort]
split-on-trailing-comma = true

[tool.black]
line-length = 140
target-version = ['py310']

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = []

[datalens.meta.mypy_common]
# this section will be inserted into all packages under
warn_unused_configs = true
disallow_untyped_defs = true
#; to make `disallow_untyped_defs = False` overrides more useful:
check_untyped_defs = true
strict_optional = true

[datalens.meta.mypy_stubs_packages_override]
# bunch of overrides for different case
# : src package -> {"name": "non standard name, but same stub should have same version"}
# : src package -> {"name": "non standard name", "version": "hard coded version"}
# : src package -> {"version": "hard coded version"}  # implies standard types-{pkg name} name
# : src package -> {"ignore": true} # stub doesn't exist
async-timeout =  {ignore = true}
attrs =  {ignore = true}
babel =  {ignore = true}
black =  {ignore = true}
boto3 =  {name = "boto3-stubs"}
certifi =  {ignore = true}
clize =  {ignore = true}
flask =  {ignore = true}
ipdb =  {ignore = true}
ipython =  {ignore = true}
jinja2 =  {ignore = true}
marshmallow =  {ignore = true}
marshmallow-oneofschema =  {ignore = true}
more-itertools =  {ignore = true}
mysqlclient =  {ignore = true}
oracledb =  {ignore = true}
pandas = {name = "pandas-stubs", version="1.5.3.230321"}
platformdirs =  {ignore = true}
poetry =  {ignore = true}
psycopg2 =  {ignore = true}
psycopg2-binary =  {name = "types-psycopg2"}
pyodbc =  {ignore = true}
pytest =  {ignore = true}
pytest-asyncio =  {ignore = true}
pyyaml =  {ignore = true}
raven =  {ignore = true}
responses =  {ignore = true}
ruff =  {ignore = true}
sentry-sdk =  {ignore = true}
shortuuid =  {ignore = true}
tomlkit =  {ignore = true}
typeguard =  {ignore = true}
typing-extensions =  {ignore = true}
uwsgi =  {ignore = true}
werkzeug =  {ignore = true}
yarl =  {ignore = true}
aiosignal = {ignore = true}
asttokens = {ignore = true}
backcall = {ignore = true}
botocore = {name = "botocore-stubs"}
build = {ignore = true}
"cachecontrol[filecache]" = {ignore = true}
charset-normalizer = {ignore = true}
cleo = {ignore = true}
click = {ignore = true}
crashtest = {ignore = true}
distlib = {ignore = true}
docutils = {ignore = true}
dulwich = {ignore = true}
exceptiongroup = {ignore = true}
executing = {ignore = true}
filelock = {ignore = true}
frozenlist = {ignore = true}
idna = {ignore = true}
importlib-metadata = {ignore = true}
iniconfig = {ignore = true}
installer = {ignore = true}
itsdangerous = {ignore = true}
jaraco-classes = {ignore = true}
jedi = {ignore = true}
jsonschema = {ignore = true}
keyring = {ignore = true}
lockfile = {ignore = true}
markupsafe = {ignore = true}
matplotlib-inline = {ignore = true}
msgpack = {ignore = true}
multidict = {ignore = true}
numpy = {ignore = true}
od = {ignore = true}
packaging = {ignore = true}
parso = {ignore = true}
pathspec = {ignore = true}
pickleshare = {ignore = true}
pkginfo = {ignore = true}
poetry-core = {ignore = true}
poetry-plugin-export = {ignore = true}
prompt-toolkit = {ignore = true}
ptyprocess = {ignore = true}
pure-eval = {ignore = true}
pycparser = {ignore = true}
pygments = {name = "types-Pygments", version="2.15.0.2"}
pyproject-hooks = {ignore = true}
pyrsistent = {ignore = true}
rapidfuzz = {ignore = true}
requests-toolbelt = {ignore = true}
shellingham = {ignore = true}
sigtools = {ignore = true}
stack-data = {ignore = true}
tomli = {ignore = true}
traitlets = {ignore = true}
trove-classifiers = {ignore = true}
types-pyyaml = {ignore = true}
virtualenv = {ignore = true}
wcwidth = {ignore = true}
webencodings = {ignore = true}
zipp = {ignore = true}
aiohttp = {ignore = true}
greenlet = {ignore = true}
jeepney = {ignore = true}
pywin32-ctypes = {ignore = true}
secretstorage = {ignore = true}
xattr = {ignore = true}
appnope = {ignore = true}
