from __future__ import annotations

from collections import defaultdict
from typing import Dict

import attr

from dl_formula.collections import NodeValueMap
from dl_formula.inspect.env import InspectionEnvironment


@attr.s
class SlicerEnvironment:
    inspect_env: InspectionEnvironment = attr.ib(factory=InspectionEnvironment)
    # Autogenerated names for parts of the formula that are sliced off and replaced by fields
    # Sliced nodes are cached separately for each level identified by an int
    cache_sliced_node_name: Dict[int, NodeValueMap[str]] = attr.ib(factory=lambda: defaultdict(NodeValueMap))
