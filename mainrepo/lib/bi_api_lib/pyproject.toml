
[tool.poetry]
name = "yandex-bi-api-lib"
version = "0.1982.0"
description = ""
authors = ["Datalens Backendovich <robot-datalens-back@yandex-team.ru>"]
packages = [{include = "bi_api_lib"}]
license = "MIT"
readme = "README.md"


[tool.poetry.dependencies]
aiohttp = ">=3.8.1"
attrs = ">=22.2.0"
flask = ">=2.0.3"
flask-marshmallow = ">=0.14.0"
flask-restx = ">=1.1.0"
marshmallow = ">=3.19.0"
marshmallow-oneofschema = ">=3.0.1"
more-itertools = ">=9.1.0"
pandas = ">=1.5.3"
python = ">=3.10, <3.12"
sentry-sdk = ">=1.15.0"
sqlalchemy = ">=1.4.46, <2.0"
tabulate = ">=0.9.0"
werkzeug = ">=2.0.3"
yandex-bi-app-tools = {path = "../bi_app_tools"}
yandex-bi-api-commons-ya-cloud = {path = "../../../lib/bi_api_commons_ya_cloud"}
yandex-bi-api-commons-ya-team = {path = "../../../lib/bi_api_commons_ya_team"}
yandex-bi-cloud-integration = {path = "../../../lib/bi_cloud_integration"}
yandex-bi-configs = {path = "../bi_configs"}
yandex-bi-core-testing = {path = "../bi_core_testing"}
yandex-bi-dls-client = {path = "../../../lib/bi_dls_client"}
yandex-bi-formula = {path = "../bi_formula"}
yandex-bi-connector-bundle-ch-filtered-ya-cloud = {path = "../../../lib/bi_connector_bundle_ch_filtered_ya_cloud"}
yandex-bi-connector-bundle-ch-frozen = {path = "../../../lib/bi_connector_bundle_ch_frozen"}
yandex-bi-connector-chyt-internal = {path = "../../../lib/bi_connector_chyt_internal"}
yandex-bi-connector-metrica = {path = "../../../lib/bi_connector_metrica"}
yandex-bi-connector-mysql = {path = "../../../lib/bi_connector_mysql"}
bi-connector-solomon = {path = "../../../lib/bi_connector_solomon"}
yandex-bi-connector-yql = {path = "../../../lib/bi_connector_yql"}
yandex-bi-service-registry-ya-cloud = {path = "../../../lib/bi_service_registry_ya_cloud"}
yandex-bi-service-registry-ya-team = {path = "../../../lib/bi_service_registry_ya_team"}
yandex-bi-connector-postgresql = {path = "../bi_connector_postgresql"}
yandex-bi-api-commons = {path = "../bi_api_commons"}
yandex-bi-api-connector = {path = "../bi_api_connector"}
yandex-bi-compeng-pg = {path = "../bi_compeng_pg"}
yandex-bi-connector-bundle-chs3 = {path = "../bi_connector_bundle_chs3"}
yandex-bi-connector-clickhouse = {path = "../bi_connector_clickhouse"}
bi-connector-greenplum = {path = "../bi_connector_greenplum"}
yandex-bi-connector-bigquery = {path = "../bi_connector_bigquery"}
yandex-bi-connector-chyt = {path = "../bi_connector_chyt"}
yandex-bi-connector-mssql = {path = "../bi_connector_mssql"}
yandex-bi-connector-oracle = {path = "../bi_connector_oracle"}
yandex-bi-connector-snowflake = {path = "../bi_connector_snowflake"}
yandex-bi-constants = {path = "../bi_constants"}
yandex-bi-core = {path = "../bi_core"}
bi-i18n = {path = "../bi_i18n"}
yandex-bi-model-tools = {path = "../bi_model_tools"}
yandex-bi-query-processing = {path = "../bi_query_processing"}
bi-task-processor = {path = "../bi_task_processor"}
yandex-bi-utils = {path = "../bi_utils"}
sqlalchemy-metrika-api = {path = "../../../lib/sqlalchemy_metrika_api"}
statcommons = {path = "../statcommons"}

[tool.poetry.group.tests.dependencies]
pytest = ">=7.2.2"
pytest-asyncio = ">=0.20.3"
pytest-lazy-fixture = ">=0.6.3"
responses = ">=0.23.1"
uwsgi = ">=2.0.21"
yandex-bi-testing-ya = {path = "../../../lib/bi_testing_ya"}
yandex-bi-api-client = {path = "../bi_api_client"}
yandex-bi-api-lib-testing = {path = "../bi_api_lib_testing"}
yandex-bi-core-testing = {path = "../bi_core_testing"}
yandex-bi-file-uploader-worker-lib = {path = "../bi_file_uploader_worker_lib"}
yandex-bi-testing = {path = "../bi_testing"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = ["bi_api_lib_tests/db/data_api", "bi_api_lib_tests/db/main", "bi_api_lib_tests/ext", "bi_api_lib_tests/unit"]

[tool.ruff]
line-length = 140
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I"
]

[tool.black]
line-length = 140
target-version = ['py310']


[tool.poetry.scripts]
bi-core-rqe-async = "bi_core.connection_executors.remote_query_executor.app_async:async_qe_main"


[datalens.meta.mypy]
targets = ["bi_api_lib"]

#[datalens.pytest.datacloud]
#root_dir = "bi_api_lib/"
#target_path = "datacloud"
#is_external = true

#[datalens.pytest.ext]
#root_dir = "bi_api_lib_tests/"
#target_path = "ext"
#labels = ["ext"]

[datalens.pytest.db]
root_dir = "bi_api_lib_tests/"
target_path = "db"
labels = ["fat"]

[datalens.pytest.unit]
root_dir = "bi_api_lib_tests/"
target_path = "unit"
skip_compose = "true"

[datalens.pytest.bitrix]
root_dir = "bi_api_lib_tests/"
target_path = "ext/bitrix"
compose_file_base = "docker-compose.bitrix"
labels = ["ext"]
