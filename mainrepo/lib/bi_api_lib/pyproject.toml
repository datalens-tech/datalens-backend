
[tool.poetry]
name = "yandex-bi-api-lib"
version = "0.2001.0"
description = ""
authors = ["Datalens Backendovich <robot-datalens-back@yandex-team.ru>"]
packages = [{include = "bi_api_lib"}]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
aiohttp = ">=3.8.1"
attrs = ">=22.2.0"
flask = ">=2.0.3"
flask-marshmallow = ">=0.14.0"
flask-restx = ">=1.1.0"
marshmallow = ">=3.19.0"
marshmallow-oneofschema = ">=3.0.1"
more-itertools = ">=9.1.0"
pandas = ">=1.5.3"
python = ">=3.10, <3.12"
sentry-sdk = ">=1.15.0"
sqlalchemy = ">=1.4.46, <2.0"
werkzeug = ">=2.0.3"
yandex-bi-app-tools = {path = "../bi_app_tools"}
yandex-bi-configs = {path = "../bi_configs"}
yandex-bi-core-testing = {path = "../bi_core_testing"}
yandex-bi-formula = {path = "../bi_formula"}
yandex-bi-connector-metrica = {path = "../../../lib/bi_connector_metrica"}
yandex-bi-connector-mysql = {path = "../../../lib/bi_connector_mysql"}
yandex-bi-connector-postgresql = {path = "../bi_connector_postgresql"}
yandex-bi-api-commons = {path = "../bi_api_commons"}
yandex-bi-api-connector = {path = "../bi_api_connector"}
yandex-bi-compeng-pg = {path = "../bi_compeng_pg"}
yandex-bi-connector-clickhouse = {path = "../bi_connector_clickhouse"}
yandex-bi-connector-oracle = {path = "../bi_connector_oracle"}
yandex-bi-constants = {path = "../bi_constants"}
yandex-bi-core = {path = "../bi_core"}
bi-i18n = {path = "../bi_i18n"}
yandex-bi-model-tools = {path = "../bi_model_tools"}
yandex-bi-query-processing = {path = "../bi_query_processing"}
bi-task-processor = {path = "../bi_task_processor"}
yandex-bi-utils = {path = "../bi_utils"}
sqlalchemy-metrika-api = {path = "../../../lib/sqlalchemy_metrika_api"}
statcommons = {path = "../statcommons"}

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.ruff]
line-length = 140
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I"
]

[tool.black]
line-length = 140
target-version = ['py310']

[tool.poetry.scripts]
bi-core-rqe-async = "bi_core.connection_executors.remote_query_executor.app_async:async_qe_main"

[datalens.meta.mypy]
targets = ["bi_api_lib"]

#[datalens.pytest.datacloud]
#root_dir = "bi_api_lib/"
#target_path = "datacloud"
#is_external = true

#[datalens.pytest.ext]
#root_dir = "bi_api_lib_tests/"
#target_path = "ext"
#labels = ["ext"]

[tool.mypy]
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
strict_optional = true

[[tool.mypy.overrides]]
module = ["flask_restx.*", "marshmallow_oneofschema.*"]
ignore_missing_imports = true

[datalens.i18n.domains]
bi_api_lib = [
    {path = "bi_api_lib"},
]

[datalens_ci]
skip_test = true
