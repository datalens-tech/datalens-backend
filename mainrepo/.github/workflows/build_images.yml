name: build_images

on:
  workflow_dispatch:
  schedule:
    - cron: "04 05 * * 6"

jobs:
#  build:
#    runs-on: [ self-hosted, linux ]
#    permissions:
#      packages: write
#    steps:
#      - name: 'Make tmp dir'
#        run: mkdir -p build_context
#      - run: |
#          echo "
#              FROM debian:bookworm
#              RUN export DEBIAN_FRONTEND=noninteractive && \
#                  apt-get update && \
#                  apt-get install --yes curl gpg ca-certificates && \
#                  install -m 0755 -d /etc/apt/keyrings && \
#                  curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
#                  chmod a+r /etc/apt/keyrings/docker.gpg && \
#                  echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian/ bookworm stable" > /etc/apt/sources.list.d/docker.list && \
#                  apt-get update && \
#                  apt-get install --yes docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin && \
#                  apt-get clean && \
#                  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
#          " > build_context/Dockerfile
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Build and push
#        uses: docker/build-push-action@v4
#        with:
#          context: build_context/
#          push: true
#          tags: "ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/debian_docker:latest"
#      - name: cleanup
#        if: always()
#        run: rm -rf build_context
#
      # JUST FOR SIMPLE RUN! EXTRACT INTO DEDICATED JOB!!!!
  bake_os:
    runs-on: [ self-hosted, linux ]
    permissions:
      packages: write
      contents: read
    container:
      image: "ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/debian_docker:latest"
      options: -v /var/run/docker.sock:/var/run/docker.sock
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      CR_TAG_BASE_OS: "ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/dl_base_os:latest"
      BAKE_TARGET: "dl_base_linux_w_db_bin_dependencies"
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Cleanup build folder'
        run: |
          rm -rf ./* || true
          rm -rf ./.??* || true
      - name: Checkout code
        uses: actions/checkout@v4
      - run: git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}
      - run: |
          cd docker_build
          ./run-project-bake "${BAKE_TARGET}" --push --set "${BAKE_TARGET}.tags=${CR_TAG_BASE_OS}"
